"use strict";exports.id="defaultVendors-_ssr_node_modules_opentelemetry_instrumentation-amqplib_build_src_index_js-_ss-ea0a47",exports.ids=["defaultVendors-_ssr_node_modules_opentelemetry_instrumentation-amqplib_build_src_index_js-_ss-ea0a47"],exports.modules={"(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/amqplib.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AmqplibInstrumentation = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(ssr)/./node_modules/@opentelemetry/api/build/esm/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"(ssr)/./node_modules/@opentelemetry/core/build/esm/index.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(ssr)/./node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(ssr)/./node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/types.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/utils.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/version.js\");\nconst supportedVersions = ['>=0.5.5 <1'];\nclass AmqplibInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, Object.assign(Object.assign({}, types_1.DEFAULT_CONFIG), config));\n    }\n    setConfig(config = {}) {\n        super.setConfig(Object.assign(Object.assign({}, types_1.DEFAULT_CONFIG), config));\n    }\n    init() {\n        const channelModelModuleFile = new instrumentation_1.InstrumentationNodeModuleFile('amqplib/lib/channel_model.js', supportedVersions, this.patchChannelModel.bind(this), this.unpatchChannelModel.bind(this));\n        const callbackModelModuleFile = new instrumentation_1.InstrumentationNodeModuleFile('amqplib/lib/callback_model.js', supportedVersions, this.patchChannelModel.bind(this), this.unpatchChannelModel.bind(this));\n        const connectModuleFile = new instrumentation_1.InstrumentationNodeModuleFile('amqplib/lib/connect.js', supportedVersions, this.patchConnect.bind(this), this.unpatchConnect.bind(this));\n        const module = new instrumentation_1.InstrumentationNodeModuleDefinition('amqplib', supportedVersions, undefined, undefined, [channelModelModuleFile, connectModuleFile, callbackModelModuleFile]);\n        return module;\n    }\n    patchConnect(moduleExports) {\n        moduleExports = this.unpatchConnect(moduleExports);\n        if (!(0, instrumentation_1.isWrapped)(moduleExports.connect)) {\n            this._wrap(moduleExports, 'connect', this.getConnectPatch.bind(this));\n        }\n        return moduleExports;\n    }\n    unpatchConnect(moduleExports) {\n        if ((0, instrumentation_1.isWrapped)(moduleExports.connect)) {\n            this._unwrap(moduleExports, 'connect');\n        }\n        return moduleExports;\n    }\n    patchChannelModel(moduleExports, moduleVersion) {\n        if (!(0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.publish)) {\n            this._wrap(moduleExports.Channel.prototype, 'publish', this.getPublishPatch.bind(this, moduleVersion));\n        }\n        if (!(0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.consume)) {\n            this._wrap(moduleExports.Channel.prototype, 'consume', this.getConsumePatch.bind(this, moduleVersion));\n        }\n        if (!(0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.ack)) {\n            this._wrap(moduleExports.Channel.prototype, 'ack', this.getAckPatch.bind(this, false, types_1.EndOperation.Ack));\n        }\n        if (!(0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.nack)) {\n            this._wrap(moduleExports.Channel.prototype, 'nack', this.getAckPatch.bind(this, true, types_1.EndOperation.Nack));\n        }\n        if (!(0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.reject)) {\n            this._wrap(moduleExports.Channel.prototype, 'reject', this.getAckPatch.bind(this, true, types_1.EndOperation.Reject));\n        }\n        if (!(0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.ackAll)) {\n            this._wrap(moduleExports.Channel.prototype, 'ackAll', this.getAckAllPatch.bind(this, false, types_1.EndOperation.AckAll));\n        }\n        if (!(0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.nackAll)) {\n            this._wrap(moduleExports.Channel.prototype, 'nackAll', this.getAckAllPatch.bind(this, true, types_1.EndOperation.NackAll));\n        }\n        if (!(0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.emit)) {\n            this._wrap(moduleExports.Channel.prototype, 'emit', this.getChannelEmitPatch.bind(this));\n        }\n        if (!(0, instrumentation_1.isWrapped)(moduleExports.ConfirmChannel.prototype.publish)) {\n            this._wrap(moduleExports.ConfirmChannel.prototype, 'publish', this.getConfirmedPublishPatch.bind(this, moduleVersion));\n        }\n        return moduleExports;\n    }\n    unpatchChannelModel(moduleExports) {\n        if ((0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.publish)) {\n            this._unwrap(moduleExports.Channel.prototype, 'publish');\n        }\n        if ((0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.consume)) {\n            this._unwrap(moduleExports.Channel.prototype, 'consume');\n        }\n        if ((0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.ack)) {\n            this._unwrap(moduleExports.Channel.prototype, 'ack');\n        }\n        if ((0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.nack)) {\n            this._unwrap(moduleExports.Channel.prototype, 'nack');\n        }\n        if ((0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.reject)) {\n            this._unwrap(moduleExports.Channel.prototype, 'reject');\n        }\n        if ((0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.ackAll)) {\n            this._unwrap(moduleExports.Channel.prototype, 'ackAll');\n        }\n        if ((0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.nackAll)) {\n            this._unwrap(moduleExports.Channel.prototype, 'nackAll');\n        }\n        if ((0, instrumentation_1.isWrapped)(moduleExports.Channel.prototype.emit)) {\n            this._unwrap(moduleExports.Channel.prototype, 'emit');\n        }\n        if ((0, instrumentation_1.isWrapped)(moduleExports.ConfirmChannel.prototype.publish)) {\n            this._unwrap(moduleExports.ConfirmChannel.prototype, 'publish');\n        }\n        return moduleExports;\n    }\n    getConnectPatch(original) {\n        return function patchedConnect(url, socketOptions, openCallback) {\n            return original.call(this, url, socketOptions, function (err, conn) {\n                if (err == null) {\n                    const urlAttributes = (0, utils_1.getConnectionAttributesFromUrl)(url);\n                    // the type of conn in @types/amqplib is amqp.Connection, but in practice the library send the\n                    // `serverProperties` on the `conn` and not in a property `connection`.\n                    // I don't have capacity to debug it currently but it should probably be fixed in @types or\n                    // in the package itself\n                    // currently setting as any to calm typescript\n                    const serverAttributes = (0, utils_1.getConnectionAttributesFromServer)(conn);\n                    conn[utils_1.CONNECTION_ATTRIBUTES] = Object.assign(Object.assign({}, urlAttributes), serverAttributes);\n                }\n                openCallback.apply(this, arguments);\n            });\n        };\n    }\n    getChannelEmitPatch(original) {\n        const self = this;\n        return function emit(eventName) {\n            if (eventName === 'close') {\n                self.endAllSpansOnChannel(this, true, types_1.EndOperation.ChannelClosed, undefined);\n                const activeTimer = this[utils_1.CHANNEL_CONSUME_TIMEOUT_TIMER];\n                if (activeTimer) {\n                    clearInterval(activeTimer);\n                }\n                this[utils_1.CHANNEL_CONSUME_TIMEOUT_TIMER] = undefined;\n            }\n            else if (eventName === 'error') {\n                self.endAllSpansOnChannel(this, true, types_1.EndOperation.ChannelError, undefined);\n            }\n            return original.apply(this, arguments);\n        };\n    }\n    getAckAllPatch(isRejected, endOperation, original) {\n        const self = this;\n        return function ackAll(requeueOrEmpty) {\n            self.endAllSpansOnChannel(this, isRejected, endOperation, requeueOrEmpty);\n            return original.apply(this, arguments);\n        };\n    }\n    getAckPatch(isRejected, endOperation, original) {\n        const self = this;\n        return function ack(message, allUpToOrRequeue, requeue) {\n            var _a;\n            const channel = this;\n            // we use this patch in reject function as well, but it has different signature\n            const requeueResolved = endOperation === types_1.EndOperation.Reject ? allUpToOrRequeue : requeue;\n            const spansNotEnded = (_a = channel[utils_1.CHANNEL_SPANS_NOT_ENDED]) !== null && _a !== void 0 ? _a : [];\n            const msgIndex = spansNotEnded.findIndex(msgDetails => msgDetails.msg === message);\n            if (msgIndex < 0) {\n                // should not happen in happy flow\n                // but possible if user is calling the api function ack twice with same message\n                self.endConsumerSpan(message, isRejected, endOperation, requeueResolved);\n            }\n            else if (endOperation !== types_1.EndOperation.Reject && allUpToOrRequeue) {\n                for (let i = 0; i <= msgIndex; i++) {\n                    self.endConsumerSpan(spansNotEnded[i].msg, isRejected, endOperation, requeueResolved);\n                }\n                spansNotEnded.splice(0, msgIndex + 1);\n            }\n            else {\n                self.endConsumerSpan(message, isRejected, endOperation, requeueResolved);\n                spansNotEnded.splice(msgIndex, 1);\n            }\n            return original.apply(this, arguments);\n        };\n    }\n    getConsumePatch(moduleVersion, original) {\n        const self = this;\n        return function consume(queue, onMessage, options) {\n            const channel = this;\n            if (!Object.prototype.hasOwnProperty.call(channel, utils_1.CHANNEL_SPANS_NOT_ENDED)) {\n                const { consumeTimeoutMs } = self.getConfig();\n                if (consumeTimeoutMs) {\n                    const timer = setInterval(() => {\n                        self.checkConsumeTimeoutOnChannel(channel);\n                    }, consumeTimeoutMs);\n                    timer.unref();\n                    channel[utils_1.CHANNEL_CONSUME_TIMEOUT_TIMER] = timer;\n                }\n                channel[utils_1.CHANNEL_SPANS_NOT_ENDED] = [];\n            }\n            const patchedOnMessage = function (msg) {\n                var _a, _b, _c, _d, _e;\n                // msg is expected to be null for signaling consumer cancel notification\n                // https://www.rabbitmq.com/consumer-cancel.html\n                // in this case, we do not start a span, as this is not a real message.\n                if (!msg) {\n                    return onMessage.call(this, msg);\n                }\n                const headers = (_a = msg.properties.headers) !== null && _a !== void 0 ? _a : {};\n                let parentContext = api_1.propagation.extract(api_1.ROOT_CONTEXT, headers);\n                const exchange = (_b = msg.fields) === null || _b === void 0 ? void 0 : _b.exchange;\n                let links;\n                if (self._config.useLinksForConsume) {\n                    const parentSpanContext = parentContext\n                        ? (_c = api_1.trace.getSpan(parentContext)) === null || _c === void 0 ? void 0 : _c.spanContext()\n                        : undefined;\n                    parentContext = undefined;\n                    if (parentSpanContext) {\n                        links = [\n                            {\n                                context: parentSpanContext,\n                            },\n                        ];\n                    }\n                }\n                const span = self.tracer.startSpan(`${queue} process`, {\n                    kind: api_1.SpanKind.CONSUMER,\n                    attributes: Object.assign(Object.assign({}, (_d = channel === null || channel === void 0 ? void 0 : channel.connection) === null || _d === void 0 ? void 0 : _d[utils_1.CONNECTION_ATTRIBUTES]), { [semantic_conventions_1.SEMATTRS_MESSAGING_DESTINATION]: exchange, [semantic_conventions_1.SEMATTRS_MESSAGING_DESTINATION_KIND]: semantic_conventions_1.MESSAGINGDESTINATIONKINDVALUES_TOPIC, [semantic_conventions_1.SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY]: (_e = msg.fields) === null || _e === void 0 ? void 0 : _e.routingKey, [semantic_conventions_1.SEMATTRS_MESSAGING_OPERATION]: semantic_conventions_1.MESSAGINGOPERATIONVALUES_PROCESS, [semantic_conventions_1.SEMATTRS_MESSAGING_MESSAGE_ID]: msg === null || msg === void 0 ? void 0 : msg.properties.messageId, [semantic_conventions_1.SEMATTRS_MESSAGING_CONVERSATION_ID]: msg === null || msg === void 0 ? void 0 : msg.properties.correlationId }),\n                    links,\n                }, parentContext);\n                const { consumeHook } = self.getConfig();\n                if (consumeHook) {\n                    (0, instrumentation_1.safeExecuteInTheMiddle)(() => consumeHook(span, { moduleVersion, msg }), e => {\n                        if (e) {\n                            api_1.diag.error('amqplib instrumentation: consumerHook error', e);\n                        }\n                    }, true);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.noAck)) {\n                    // store the message on the channel so we can close the span on ackAll etc\n                    channel[utils_1.CHANNEL_SPANS_NOT_ENDED].push({\n                        msg,\n                        timeOfConsume: (0, core_1.hrTime)(),\n                    });\n                    // store the span on the message, so we can end it when user call 'ack' on it\n                    msg[utils_1.MESSAGE_STORED_SPAN] = span;\n                }\n                const setContext = parentContext\n                    ? parentContext\n                    : api_1.ROOT_CONTEXT;\n                api_1.context.with(api_1.trace.setSpan(setContext, span), () => {\n                    onMessage.call(this, msg);\n                });\n                if (options === null || options === void 0 ? void 0 : options.noAck) {\n                    self.callConsumeEndHook(span, msg, false, types_1.EndOperation.AutoAck);\n                    span.end();\n                }\n            };\n            arguments[1] = patchedOnMessage;\n            return original.apply(this, arguments);\n        };\n    }\n    getConfirmedPublishPatch(moduleVersion, original) {\n        const self = this;\n        return function confirmedPublish(exchange, routingKey, content, options, callback) {\n            const channel = this;\n            const { span, modifiedOptions } = self.createPublishSpan(self, exchange, routingKey, channel, options);\n            const { publishHook } = self.getConfig();\n            if (publishHook) {\n                (0, instrumentation_1.safeExecuteInTheMiddle)(() => publishHook(span, {\n                    moduleVersion,\n                    exchange,\n                    routingKey,\n                    content,\n                    options: modifiedOptions,\n                    isConfirmChannel: true,\n                }), e => {\n                    if (e) {\n                        api_1.diag.error('amqplib instrumentation: publishHook error', e);\n                    }\n                }, true);\n            }\n            const patchedOnConfirm = function (err, ok) {\n                try {\n                    callback === null || callback === void 0 ? void 0 : callback.call(this, err, ok);\n                }\n                finally {\n                    const { publishConfirmHook } = self.getConfig();\n                    if (publishConfirmHook) {\n                        (0, instrumentation_1.safeExecuteInTheMiddle)(() => publishConfirmHook(span, {\n                            moduleVersion,\n                            exchange,\n                            routingKey,\n                            content,\n                            options,\n                            isConfirmChannel: true,\n                            confirmError: err,\n                        }), e => {\n                            if (e) {\n                                api_1.diag.error('amqplib instrumentation: publishConfirmHook error', e);\n                            }\n                        }, true);\n                    }\n                    if (err) {\n                        span.setStatus({\n                            code: api_1.SpanStatusCode.ERROR,\n                            message: \"message confirmation has been nack'ed\",\n                        });\n                    }\n                    span.end();\n                }\n            };\n            // calling confirm channel publish function is storing the message in queue and registering the callback for broker confirm.\n            // span ends in the patched callback.\n            const markedContext = (0, utils_1.markConfirmChannelTracing)(api_1.context.active());\n            const argumentsCopy = [...arguments];\n            argumentsCopy[3] = modifiedOptions;\n            argumentsCopy[4] = api_1.context.bind((0, utils_1.unmarkConfirmChannelTracing)(api_1.trace.setSpan(markedContext, span)), patchedOnConfirm);\n            return api_1.context.with(markedContext, original.bind(this, ...argumentsCopy));\n        };\n    }\n    getPublishPatch(moduleVersion, original) {\n        const self = this;\n        return function publish(exchange, routingKey, content, options) {\n            if ((0, utils_1.isConfirmChannelTracing)(api_1.context.active())) {\n                // work already done\n                return original.apply(this, arguments);\n            }\n            else {\n                const channel = this;\n                const { span, modifiedOptions } = self.createPublishSpan(self, exchange, routingKey, channel, options);\n                const { publishHook } = self.getConfig();\n                if (publishHook) {\n                    (0, instrumentation_1.safeExecuteInTheMiddle)(() => publishHook(span, {\n                        moduleVersion,\n                        exchange,\n                        routingKey,\n                        content,\n                        options: modifiedOptions,\n                        isConfirmChannel: false,\n                    }), e => {\n                        if (e) {\n                            api_1.diag.error('amqplib instrumentation: publishHook error', e);\n                        }\n                    }, true);\n                }\n                // calling normal channel publish function is only storing the message in queue.\n                // it does not send it and waits for an ack, so the span duration is expected to be very short.\n                const argumentsCopy = [...arguments];\n                argumentsCopy[3] = modifiedOptions;\n                const originalRes = original.apply(this, argumentsCopy);\n                span.end();\n                return originalRes;\n            }\n        };\n    }\n    createPublishSpan(self, exchange, routingKey, channel, options) {\n        var _a;\n        const normalizedExchange = (0, utils_1.normalizeExchange)(exchange);\n        const span = self.tracer.startSpan(`publish ${normalizedExchange}`, {\n            kind: api_1.SpanKind.PRODUCER,\n            attributes: Object.assign(Object.assign({}, channel.connection[utils_1.CONNECTION_ATTRIBUTES]), { [semantic_conventions_1.SEMATTRS_MESSAGING_DESTINATION]: exchange, [semantic_conventions_1.SEMATTRS_MESSAGING_DESTINATION_KIND]: semantic_conventions_1.MESSAGINGDESTINATIONKINDVALUES_TOPIC, [semantic_conventions_1.SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY]: routingKey, [semantic_conventions_1.SEMATTRS_MESSAGING_MESSAGE_ID]: options === null || options === void 0 ? void 0 : options.messageId, [semantic_conventions_1.SEMATTRS_MESSAGING_CONVERSATION_ID]: options === null || options === void 0 ? void 0 : options.correlationId }),\n        });\n        const modifiedOptions = options !== null && options !== void 0 ? options : {};\n        modifiedOptions.headers = (_a = modifiedOptions.headers) !== null && _a !== void 0 ? _a : {};\n        api_1.propagation.inject(api_1.trace.setSpan(api_1.context.active(), span), modifiedOptions.headers);\n        return { span, modifiedOptions };\n    }\n    endConsumerSpan(message, isRejected, operation, requeue) {\n        const storedSpan = message[utils_1.MESSAGE_STORED_SPAN];\n        if (!storedSpan)\n            return;\n        if (isRejected !== false) {\n            storedSpan.setStatus({\n                code: api_1.SpanStatusCode.ERROR,\n                message: operation !== types_1.EndOperation.ChannelClosed &&\n                    operation !== types_1.EndOperation.ChannelError\n                    ? `${operation} called on message${requeue === true\n                        ? ' with requeue'\n                        : requeue === false\n                            ? ' without requeue'\n                            : ''}`\n                    : operation,\n            });\n        }\n        this.callConsumeEndHook(storedSpan, message, isRejected, operation);\n        storedSpan.end();\n        message[utils_1.MESSAGE_STORED_SPAN] = undefined;\n    }\n    endAllSpansOnChannel(channel, isRejected, operation, requeue) {\n        var _a;\n        const spansNotEnded = (_a = channel[utils_1.CHANNEL_SPANS_NOT_ENDED]) !== null && _a !== void 0 ? _a : [];\n        spansNotEnded.forEach(msgDetails => {\n            this.endConsumerSpan(msgDetails.msg, isRejected, operation, requeue);\n        });\n        channel[utils_1.CHANNEL_SPANS_NOT_ENDED] = [];\n    }\n    callConsumeEndHook(span, msg, rejected, endOperation) {\n        const { consumeEndHook } = this.getConfig();\n        if (!consumeEndHook)\n            return;\n        (0, instrumentation_1.safeExecuteInTheMiddle)(() => consumeEndHook(span, { msg, rejected, endOperation }), e => {\n            if (e) {\n                api_1.diag.error('amqplib instrumentation: consumerEndHook error', e);\n            }\n        }, true);\n    }\n    checkConsumeTimeoutOnChannel(channel) {\n        var _a;\n        const currentTime = (0, core_1.hrTime)();\n        const spansNotEnded = (_a = channel[utils_1.CHANNEL_SPANS_NOT_ENDED]) !== null && _a !== void 0 ? _a : [];\n        let i;\n        const { consumeTimeoutMs } = this.getConfig();\n        for (i = 0; i < spansNotEnded.length; i++) {\n            const currMessage = spansNotEnded[i];\n            const timeFromConsume = (0, core_1.hrTimeDuration)(currMessage.timeOfConsume, currentTime);\n            if ((0, core_1.hrTimeToMilliseconds)(timeFromConsume) < consumeTimeoutMs) {\n                break;\n            }\n            this.endConsumerSpan(currMessage.msg, null, types_1.EndOperation.InstrumentationTimeout, true);\n        }\n        spansNotEnded.splice(0, i);\n    }\n}\nexports.AmqplibInstrumentation = AmqplibInstrumentation;\n//# sourceMappingURL=amqplib.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/amqplib.js\n")},"(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n__exportStar(__webpack_require__(/*! ./amqplib */ "(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/amqplib.js"), exports);\n__exportStar(__webpack_require__(/*! ./types */ "(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/types.js"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWFtcXBsaWIvYnVpbGQvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsbUdBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLCtGQUFTO0FBQzlCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXDFcXERvd25sb2Fkc1xcdGFib3JBY2FkZW15VXBkYXRlZFxcdGFib3ItYWNhZGVteVxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uLWFtcXBsaWJcXGJ1aWxkXFxzcmNcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FtcXBsaWJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/index.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/types.js":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.DEFAULT_CONFIG = exports.EndOperation = void 0;\nvar EndOperation;\n(function (EndOperation) {\n    EndOperation["AutoAck"] = "auto ack";\n    EndOperation["Ack"] = "ack";\n    EndOperation["AckAll"] = "ackAll";\n    EndOperation["Reject"] = "reject";\n    EndOperation["Nack"] = "nack";\n    EndOperation["NackAll"] = "nackAll";\n    EndOperation["ChannelClosed"] = "channel closed";\n    EndOperation["ChannelError"] = "channel error";\n    EndOperation["InstrumentationTimeout"] = "instrumentation timeout";\n})(EndOperation = exports.EndOperation || (exports.EndOperation = {}));\nexports.DEFAULT_CONFIG = {\n    consumeTimeoutMs: 1000 * 60,\n    useLinksForConsume: false,\n};\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWFtcXBsaWIvYnVpbGQvc3JjL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLG9CQUFvQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwQ0FBMEMsb0JBQW9CLEtBQUs7QUFDcEUsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXDFcXERvd25sb2Fkc1xcdGFib3JBY2FkZW15VXBkYXRlZFxcdGFib3ItYWNhZGVteVxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uLWFtcXBsaWJcXGJ1aWxkXFxzcmNcXHR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ERUZBVUxUX0NPTkZJRyA9IGV4cG9ydHMuRW5kT3BlcmF0aW9uID0gdm9pZCAwO1xudmFyIEVuZE9wZXJhdGlvbjtcbihmdW5jdGlvbiAoRW5kT3BlcmF0aW9uKSB7XG4gICAgRW5kT3BlcmF0aW9uW1wiQXV0b0Fja1wiXSA9IFwiYXV0byBhY2tcIjtcbiAgICBFbmRPcGVyYXRpb25bXCJBY2tcIl0gPSBcImFja1wiO1xuICAgIEVuZE9wZXJhdGlvbltcIkFja0FsbFwiXSA9IFwiYWNrQWxsXCI7XG4gICAgRW5kT3BlcmF0aW9uW1wiUmVqZWN0XCJdID0gXCJyZWplY3RcIjtcbiAgICBFbmRPcGVyYXRpb25bXCJOYWNrXCJdID0gXCJuYWNrXCI7XG4gICAgRW5kT3BlcmF0aW9uW1wiTmFja0FsbFwiXSA9IFwibmFja0FsbFwiO1xuICAgIEVuZE9wZXJhdGlvbltcIkNoYW5uZWxDbG9zZWRcIl0gPSBcImNoYW5uZWwgY2xvc2VkXCI7XG4gICAgRW5kT3BlcmF0aW9uW1wiQ2hhbm5lbEVycm9yXCJdID0gXCJjaGFubmVsIGVycm9yXCI7XG4gICAgRW5kT3BlcmF0aW9uW1wiSW5zdHJ1bWVudGF0aW9uVGltZW91dFwiXSA9IFwiaW5zdHJ1bWVudGF0aW9uIHRpbWVvdXRcIjtcbn0pKEVuZE9wZXJhdGlvbiA9IGV4cG9ydHMuRW5kT3BlcmF0aW9uIHx8IChleHBvcnRzLkVuZE9wZXJhdGlvbiA9IHt9KSk7XG5leHBvcnRzLkRFRkFVTFRfQ09ORklHID0ge1xuICAgIGNvbnN1bWVUaW1lb3V0TXM6IDEwMDAgKiA2MCxcbiAgICB1c2VMaW5rc0ZvckNvbnN1bWU6IGZhbHNlLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/types.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isConfirmChannelTracing = exports.unmarkConfirmChannelTracing = exports.markConfirmChannelTracing = exports.getConnectionAttributesFromUrl = exports.getConnectionAttributesFromServer = exports.normalizeExchange = exports.CONNECTION_ATTRIBUTES = exports.CHANNEL_CONSUME_TIMEOUT_TIMER = exports.CHANNEL_SPANS_NOT_ENDED = exports.MESSAGE_STORED_SPAN = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(ssr)/./node_modules/@opentelemetry/api/build/esm/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(ssr)/./node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nexports.MESSAGE_STORED_SPAN = Symbol('opentelemetry.amqplib.message.stored-span');\nexports.CHANNEL_SPANS_NOT_ENDED = Symbol('opentelemetry.amqplib.channel.spans-not-ended');\nexports.CHANNEL_CONSUME_TIMEOUT_TIMER = Symbol('opentelemetry.amqplib.channel.consumer-timeout-timer');\nexports.CONNECTION_ATTRIBUTES = Symbol('opentelemetry.amqplib.connection.attributes');\nconst IS_CONFIRM_CHANNEL_CONTEXT_KEY = (0, api_1.createContextKey)('opentelemetry.amqplib.channel.is-confirm-channel');\nconst normalizeExchange = (exchangeName) => exchangeName !== '' ? exchangeName : '<default>';\nexports.normalizeExchange = normalizeExchange;\nconst censorPassword = (url) => {\n    return url.replace(/:[^:@/]*@/, ':***@');\n};\nconst getPort = (portFromUrl, resolvedProtocol) => {\n    // we are using the resolved protocol which is upper case\n    // this code mimic the behavior of the amqplib which is used to set connection params\n    return portFromUrl || (resolvedProtocol === 'AMQP' ? 5672 : 5671);\n};\nconst getProtocol = (protocolFromUrl) => {\n    const resolvedProtocol = protocolFromUrl || 'amqp';\n    // the substring removed the ':' part of the protocol ('amqp:' -> 'amqp')\n    const noEndingColon = resolvedProtocol.endsWith(':')\n        ? resolvedProtocol.substring(0, resolvedProtocol.length - 1)\n        : resolvedProtocol;\n    // upper cases to match spec\n    return noEndingColon.toUpperCase();\n};\nconst getHostname = (hostnameFromUrl) => {\n    // if user supplies empty hostname, it gets forwarded to 'net' package which default it to localhost.\n    // https://nodejs.org/docs/latest-v12.x/api/net.html#net_socket_connect_options_connectlistener\n    return hostnameFromUrl || 'localhost';\n};\nconst extractConnectionAttributeOrLog = (url, attributeKey, attributeValue, nameForLog) => {\n    if (attributeValue) {\n        return { [attributeKey]: attributeValue };\n    }\n    else {\n        api_1.diag.error(`amqplib instrumentation: could not extract connection attribute ${nameForLog} from user supplied url`, {\n            url,\n        });\n        return {};\n    }\n};\nconst getConnectionAttributesFromServer = (conn) => {\n    var _a, _b;\n    const product = (_b = (_a = conn.serverProperties.product) === null || _a === void 0 ? void 0 : _a.toLowerCase) === null || _b === void 0 ? void 0 : _b.call(_a);\n    if (product) {\n        return {\n            [semantic_conventions_1.SEMATTRS_MESSAGING_SYSTEM]: product,\n        };\n    }\n    else {\n        return {};\n    }\n};\nexports.getConnectionAttributesFromServer = getConnectionAttributesFromServer;\nconst getConnectionAttributesFromUrl = (url) => {\n    const attributes = {\n        [semantic_conventions_1.SEMATTRS_MESSAGING_PROTOCOL_VERSION]: '0.9.1', // this is the only protocol supported by the instrumented library\n    };\n    url = url || 'amqp://localhost';\n    if (typeof url === 'object') {\n        const connectOptions = url;\n        const protocol = getProtocol(connectOptions === null || connectOptions === void 0 ? void 0 : connectOptions.protocol);\n        Object.assign(attributes, Object.assign({}, extractConnectionAttributeOrLog(url, semantic_conventions_1.SEMATTRS_MESSAGING_PROTOCOL, protocol, 'protocol')));\n        const hostname = getHostname(connectOptions === null || connectOptions === void 0 ? void 0 : connectOptions.hostname);\n        Object.assign(attributes, Object.assign({}, extractConnectionAttributeOrLog(url, semantic_conventions_1.SEMATTRS_NET_PEER_NAME, hostname, 'hostname')));\n        const port = getPort(connectOptions.port, protocol);\n        Object.assign(attributes, Object.assign({}, extractConnectionAttributeOrLog(url, semantic_conventions_1.SEMATTRS_NET_PEER_PORT, port, 'port')));\n    }\n    else {\n        const censoredUrl = censorPassword(url);\n        attributes[semantic_conventions_1.SEMATTRS_MESSAGING_URL] = censoredUrl;\n        try {\n            const urlParts = new URL(censoredUrl);\n            const protocol = getProtocol(urlParts.protocol);\n            Object.assign(attributes, Object.assign({}, extractConnectionAttributeOrLog(censoredUrl, semantic_conventions_1.SEMATTRS_MESSAGING_PROTOCOL, protocol, 'protocol')));\n            const hostname = getHostname(urlParts.hostname);\n            Object.assign(attributes, Object.assign({}, extractConnectionAttributeOrLog(censoredUrl, semantic_conventions_1.SEMATTRS_NET_PEER_NAME, hostname, 'hostname')));\n            const port = getPort(urlParts.port ? parseInt(urlParts.port) : undefined, protocol);\n            Object.assign(attributes, Object.assign({}, extractConnectionAttributeOrLog(censoredUrl, semantic_conventions_1.SEMATTRS_NET_PEER_PORT, port, 'port')));\n        }\n        catch (err) {\n            api_1.diag.error('amqplib instrumentation: error while extracting connection details from connection url', {\n                censoredUrl,\n                err,\n            });\n        }\n    }\n    return attributes;\n};\nexports.getConnectionAttributesFromUrl = getConnectionAttributesFromUrl;\nconst markConfirmChannelTracing = (context) => {\n    return context.setValue(IS_CONFIRM_CHANNEL_CONTEXT_KEY, true);\n};\nexports.markConfirmChannelTracing = markConfirmChannelTracing;\nconst unmarkConfirmChannelTracing = (context) => {\n    return context.deleteValue(IS_CONFIRM_CHANNEL_CONTEXT_KEY);\n};\nexports.unmarkConfirmChannelTracing = unmarkConfirmChannelTracing;\nconst isConfirmChannelTracing = (context) => {\n    return context.getValue(IS_CONFIRM_CHANNEL_CONTEXT_KEY) === true;\n};\nexports.isConfirmChannelTracing = isConfirmChannelTracing;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/utils.js\n")},"(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/version.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = \'0.46.1\';\nexports.PACKAGE_NAME = \'@opentelemetry/instrumentation-amqplib\';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWFtcXBsaWIvYnVpbGQvc3JjL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsdUJBQXVCO0FBQzlDO0FBQ0EsdUJBQXVCO0FBQ3ZCLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFwxXFxEb3dubG9hZHNcXHRhYm9yQWNhZGVteVVwZGF0ZWRcXHRhYm9yLWFjYWRlbXlcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvbi1hbXFwbGliXFxidWlsZFxcc3JjXFx2ZXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUEFDS0FHRV9OQU1FID0gZXhwb3J0cy5QQUNLQUdFX1ZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gJzAuNDYuMSc7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9ICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tYW1xcGxpYic7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-amqplib/build/src/version.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/enums/AttributeNames.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.ConnectNames = exports.ConnectTypes = exports.AttributeNames = void 0;\nvar AttributeNames;\n(function (AttributeNames) {\n    AttributeNames["CONNECT_TYPE"] = "connect.type";\n    AttributeNames["CONNECT_NAME"] = "connect.name";\n})(AttributeNames = exports.AttributeNames || (exports.AttributeNames = {}));\nvar ConnectTypes;\n(function (ConnectTypes) {\n    ConnectTypes["MIDDLEWARE"] = "middleware";\n    ConnectTypes["REQUEST_HANDLER"] = "request_handler";\n})(ConnectTypes = exports.ConnectTypes || (exports.ConnectTypes = {}));\nvar ConnectNames;\n(function (ConnectNames) {\n    ConnectNames["MIDDLEWARE"] = "middleware";\n    ConnectNames["REQUEST_HANDLER"] = "request handler";\n})(ConnectNames = exports.ConnectNames || (exports.ConnectNames = {}));\n//# sourceMappingURL=AttributeNames.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWNvbm5lY3QvYnVpbGQvc3JjL2VudW1zL0F0dHJpYnV0ZU5hbWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLG9CQUFvQixHQUFHLHNCQUFzQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDLHNCQUFzQixLQUFLO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwQ0FBMEMsb0JBQW9CLEtBQUs7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBDQUEwQyxvQkFBb0IsS0FBSztBQUNwRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFwxXFxEb3dubG9hZHNcXHRhYm9yQWNhZGVteVVwZGF0ZWRcXHRhYm9yLWFjYWRlbXlcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvbi1jb25uZWN0XFxidWlsZFxcc3JjXFxlbnVtc1xcQXR0cmlidXRlTmFtZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25uZWN0TmFtZXMgPSBleHBvcnRzLkNvbm5lY3RUeXBlcyA9IGV4cG9ydHMuQXR0cmlidXRlTmFtZXMgPSB2b2lkIDA7XG52YXIgQXR0cmlidXRlTmFtZXM7XG4oZnVuY3Rpb24gKEF0dHJpYnV0ZU5hbWVzKSB7XG4gICAgQXR0cmlidXRlTmFtZXNbXCJDT05ORUNUX1RZUEVcIl0gPSBcImNvbm5lY3QudHlwZVwiO1xuICAgIEF0dHJpYnV0ZU5hbWVzW1wiQ09OTkVDVF9OQU1FXCJdID0gXCJjb25uZWN0Lm5hbWVcIjtcbn0pKEF0dHJpYnV0ZU5hbWVzID0gZXhwb3J0cy5BdHRyaWJ1dGVOYW1lcyB8fCAoZXhwb3J0cy5BdHRyaWJ1dGVOYW1lcyA9IHt9KSk7XG52YXIgQ29ubmVjdFR5cGVzO1xuKGZ1bmN0aW9uIChDb25uZWN0VHlwZXMpIHtcbiAgICBDb25uZWN0VHlwZXNbXCJNSURETEVXQVJFXCJdID0gXCJtaWRkbGV3YXJlXCI7XG4gICAgQ29ubmVjdFR5cGVzW1wiUkVRVUVTVF9IQU5ETEVSXCJdID0gXCJyZXF1ZXN0X2hhbmRsZXJcIjtcbn0pKENvbm5lY3RUeXBlcyA9IGV4cG9ydHMuQ29ubmVjdFR5cGVzIHx8IChleHBvcnRzLkNvbm5lY3RUeXBlcyA9IHt9KSk7XG52YXIgQ29ubmVjdE5hbWVzO1xuKGZ1bmN0aW9uIChDb25uZWN0TmFtZXMpIHtcbiAgICBDb25uZWN0TmFtZXNbXCJNSURETEVXQVJFXCJdID0gXCJtaWRkbGV3YXJlXCI7XG4gICAgQ29ubmVjdE5hbWVzW1wiUkVRVUVTVF9IQU5ETEVSXCJdID0gXCJyZXF1ZXN0IGhhbmRsZXJcIjtcbn0pKENvbm5lY3ROYW1lcyA9IGV4cG9ydHMuQ29ubmVjdE5hbWVzIHx8IChleHBvcnRzLkNvbm5lY3ROYW1lcyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdHRyaWJ1dGVOYW1lcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/enums/AttributeNames.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./enums/AttributeNames */ "(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/enums/AttributeNames.js"), exports);\n__exportStar(__webpack_require__(/*! ./instrumentation */ "(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/instrumentation.js"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWNvbm5lY3QvYnVpbGQvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsNkhBQXdCO0FBQzdDLGFBQWEsbUJBQU8sQ0FBQyxtSEFBbUI7QUFDeEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcMVxcRG93bmxvYWRzXFx0YWJvckFjYWRlbXlVcGRhdGVkXFx0YWJvci1hY2FkZW15XFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxpbnN0cnVtZW50YXRpb24tY29ubmVjdFxcYnVpbGRcXHNyY1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZW51bXMvQXR0cmlidXRlTmFtZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2luc3RydW1lbnRhdGlvblwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/index.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/instrumentation.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConnectInstrumentation = exports.ANONYMOUS_NAME = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(ssr)/./node_modules/@opentelemetry/api/build/esm/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"(ssr)/./node_modules/@opentelemetry/core/build/esm/index.js\");\nconst AttributeNames_1 = __webpack_require__(/*! ./enums/AttributeNames */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/enums/AttributeNames.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/version.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(ssr)/./node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(ssr)/./node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/utils.js\");\nexports.ANONYMOUS_NAME = 'anonymous';\n/** Connect instrumentation for OpenTelemetry */\nclass ConnectInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, config);\n    }\n    init() {\n        return [\n            new instrumentation_1.InstrumentationNodeModuleDefinition('connect', ['>=3.0.0 <4'], moduleExports => {\n                return this._patchConstructor(moduleExports);\n            }),\n        ];\n    }\n    _patchApp(patchedApp) {\n        if (!(0, instrumentation_1.isWrapped)(patchedApp.use)) {\n            this._wrap(patchedApp, 'use', this._patchUse.bind(this));\n        }\n        if (!(0, instrumentation_1.isWrapped)(patchedApp.handle)) {\n            this._wrap(patchedApp, 'handle', this._patchHandle.bind(this));\n        }\n    }\n    _patchConstructor(original) {\n        const instrumentation = this;\n        return function (...args) {\n            const app = original.apply(this, args);\n            instrumentation._patchApp(app);\n            return app;\n        };\n    }\n    _patchNext(next, finishSpan) {\n        return function nextFunction(err) {\n            const result = next.apply(this, [err]);\n            finishSpan();\n            return result;\n        };\n    }\n    _startSpan(routeName, middleWare) {\n        let connectType;\n        let connectName;\n        let connectTypeName;\n        if (routeName) {\n            connectType = AttributeNames_1.ConnectTypes.REQUEST_HANDLER;\n            connectTypeName = AttributeNames_1.ConnectNames.REQUEST_HANDLER;\n            connectName = routeName;\n        }\n        else {\n            connectType = AttributeNames_1.ConnectTypes.MIDDLEWARE;\n            connectTypeName = AttributeNames_1.ConnectNames.MIDDLEWARE;\n            connectName = middleWare.name || exports.ANONYMOUS_NAME;\n        }\n        const spanName = `${connectTypeName} - ${connectName}`;\n        const options = {\n            attributes: {\n                [semantic_conventions_1.SEMATTRS_HTTP_ROUTE]: routeName.length > 0 ? routeName : '/',\n                [AttributeNames_1.AttributeNames.CONNECT_TYPE]: connectType,\n                [AttributeNames_1.AttributeNames.CONNECT_NAME]: connectName,\n            },\n        };\n        return this.tracer.startSpan(spanName, options);\n    }\n    _patchMiddleware(routeName, middleWare) {\n        const instrumentation = this;\n        const isErrorMiddleware = middleWare.length === 4;\n        function patchedMiddleware() {\n            if (!instrumentation.isEnabled()) {\n                return middleWare.apply(this, arguments);\n            }\n            const [reqArgIdx, resArgIdx, nextArgIdx] = isErrorMiddleware\n                ? [1, 2, 3]\n                : [0, 1, 2];\n            const req = arguments[reqArgIdx];\n            const res = arguments[resArgIdx];\n            const next = arguments[nextArgIdx];\n            (0, utils_1.replaceCurrentStackRoute)(req, routeName);\n            const rpcMetadata = (0, core_1.getRPCMetadata)(api_1.context.active());\n            if (routeName && (rpcMetadata === null || rpcMetadata === void 0 ? void 0 : rpcMetadata.type) === core_1.RPCType.HTTP) {\n                rpcMetadata.route = (0, utils_1.generateRoute)(req);\n            }\n            let spanName = '';\n            if (routeName) {\n                spanName = `request handler - ${routeName}`;\n            }\n            else {\n                spanName = `middleware - ${middleWare.name || exports.ANONYMOUS_NAME}`;\n            }\n            const span = instrumentation._startSpan(routeName, middleWare);\n            instrumentation._diag.debug('start span', spanName);\n            let spanFinished = false;\n            function finishSpan() {\n                if (!spanFinished) {\n                    spanFinished = true;\n                    instrumentation._diag.debug(`finishing span ${span.name}`);\n                    span.end();\n                }\n                else {\n                    instrumentation._diag.debug(`span ${span.name} - already finished`);\n                }\n                res.removeListener('close', finishSpan);\n            }\n            res.addListener('close', finishSpan);\n            arguments[nextArgIdx] = instrumentation._patchNext(next, finishSpan);\n            return middleWare.apply(this, arguments);\n        }\n        Object.defineProperty(patchedMiddleware, 'length', {\n            value: middleWare.length,\n            writable: false,\n            configurable: true,\n        });\n        return patchedMiddleware;\n    }\n    _patchUse(original) {\n        const instrumentation = this;\n        return function (...args) {\n            const middleWare = args[args.length - 1];\n            const routeName = (args[args.length - 2] || '');\n            args[args.length - 1] = instrumentation._patchMiddleware(routeName, middleWare);\n            return original.apply(this, args);\n        };\n    }\n    _patchHandle(original) {\n        const instrumentation = this;\n        return function () {\n            const [reqIdx, outIdx] = [0, 2];\n            const req = arguments[reqIdx];\n            const out = arguments[outIdx];\n            const completeStack = (0, utils_1.addNewStackLayer)(req);\n            if (typeof out === 'function') {\n                arguments[outIdx] = instrumentation._patchOut(out, completeStack);\n            }\n            return original.apply(this, arguments);\n        };\n    }\n    _patchOut(out, completeStack) {\n        return function nextFunction(...args) {\n            completeStack();\n            return Reflect.apply(out, this, args);\n        };\n    }\n}\nexports.ConnectInstrumentation = ConnectInstrumentation;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/instrumentation.js\n")},"(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/internal-types.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports._LAYERS_STORE_PROPERTY = void 0;\nexports._LAYERS_STORE_PROPERTY = Symbol(\'opentelemetry.instrumentation-connect.request-route-stack\');\n//# sourceMappingURL=internal-types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWNvbm5lY3QvYnVpbGQvc3JjL2ludGVybmFsLXR5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QjtBQUM5Qiw4QkFBOEI7QUFDOUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcMVxcRG93bmxvYWRzXFx0YWJvckFjYWRlbXlVcGRhdGVkXFx0YWJvci1hY2FkZW15XFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxpbnN0cnVtZW50YXRpb24tY29ubmVjdFxcYnVpbGRcXHNyY1xcaW50ZXJuYWwtdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5fTEFZRVJTX1NUT1JFX1BST1BFUlRZID0gdm9pZCAwO1xuZXhwb3J0cy5fTEFZRVJTX1NUT1JFX1BST1BFUlRZID0gU3ltYm9sKCdvcGVudGVsZW1ldHJ5Lmluc3RydW1lbnRhdGlvbi1jb25uZWN0LnJlcXVlc3Qtcm91dGUtc3RhY2snKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVybmFsLXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/internal-types.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.generateRoute = exports.replaceCurrentStackRoute = exports.addNewStackLayer = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ "(ssr)/./node_modules/@opentelemetry/api/build/esm/index.js");\nconst internal_types_1 = __webpack_require__(/*! ./internal-types */ "(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/internal-types.js");\nconst addNewStackLayer = (request) => {\n    if (Array.isArray(request[internal_types_1._LAYERS_STORE_PROPERTY]) === false) {\n        Object.defineProperty(request, internal_types_1._LAYERS_STORE_PROPERTY, {\n            enumerable: false,\n            value: [],\n        });\n    }\n    request[internal_types_1._LAYERS_STORE_PROPERTY].push(\'/\');\n    const stackLength = request[internal_types_1._LAYERS_STORE_PROPERTY].length;\n    return () => {\n        if (stackLength === request[internal_types_1._LAYERS_STORE_PROPERTY].length) {\n            request[internal_types_1._LAYERS_STORE_PROPERTY].pop();\n        }\n        else {\n            api_1.diag.warn(\'Connect: Trying to pop the stack multiple time\');\n        }\n    };\n};\nexports.addNewStackLayer = addNewStackLayer;\nconst replaceCurrentStackRoute = (request, newRoute) => {\n    if (newRoute) {\n        request[internal_types_1._LAYERS_STORE_PROPERTY].splice(-1, 1, newRoute);\n    }\n};\nexports.replaceCurrentStackRoute = replaceCurrentStackRoute;\n// generate route from existing stack on request object.\n// splash between stack layer will be deduped\n// ["/first/", "/second", "/third/"] => /first/second/third/\nconst generateRoute = (request) => {\n    return request[internal_types_1._LAYERS_STORE_PROPERTY].reduce((acc, sub) => acc.replace(/\\/+$/, \'\') + sub);\n};\nexports.generateRoute = generateRoute;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWNvbm5lY3QvYnVpbGQvc3JjL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLGdDQUFnQyxHQUFHLHdCQUF3QjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1CQUFPLENBQUMsc0ZBQW9CO0FBQzFDLHlCQUF5QixtQkFBTyxDQUFDLGlIQUFrQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFwxXFxEb3dubG9hZHNcXHRhYm9yQWNhZGVteVVwZGF0ZWRcXHRhYm9yLWFjYWRlbXlcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvbi1jb25uZWN0XFxidWlsZFxcc3JjXFx1dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2VuZXJhdGVSb3V0ZSA9IGV4cG9ydHMucmVwbGFjZUN1cnJlbnRTdGFja1JvdXRlID0gZXhwb3J0cy5hZGROZXdTdGFja0xheWVyID0gdm9pZCAwO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGludGVybmFsX3R5cGVzXzEgPSByZXF1aXJlKFwiLi9pbnRlcm5hbC10eXBlc1wiKTtcbmNvbnN0IGFkZE5ld1N0YWNrTGF5ZXIgPSAocmVxdWVzdCkgPT4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHJlcXVlc3RbaW50ZXJuYWxfdHlwZXNfMS5fTEFZRVJTX1NUT1JFX1BST1BFUlRZXSkgPT09IGZhbHNlKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1ZXN0LCBpbnRlcm5hbF90eXBlc18xLl9MQVlFUlNfU1RPUkVfUFJPUEVSVFksIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgdmFsdWU6IFtdLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVxdWVzdFtpbnRlcm5hbF90eXBlc18xLl9MQVlFUlNfU1RPUkVfUFJPUEVSVFldLnB1c2goJy8nKTtcbiAgICBjb25zdCBzdGFja0xlbmd0aCA9IHJlcXVlc3RbaW50ZXJuYWxfdHlwZXNfMS5fTEFZRVJTX1NUT1JFX1BST1BFUlRZXS5sZW5ndGg7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgaWYgKHN0YWNrTGVuZ3RoID09PSByZXF1ZXN0W2ludGVybmFsX3R5cGVzXzEuX0xBWUVSU19TVE9SRV9QUk9QRVJUWV0ubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXF1ZXN0W2ludGVybmFsX3R5cGVzXzEuX0xBWUVSU19TVE9SRV9QUk9QRVJUWV0ucG9wKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhcGlfMS5kaWFnLndhcm4oJ0Nvbm5lY3Q6IFRyeWluZyB0byBwb3AgdGhlIHN0YWNrIG11bHRpcGxlIHRpbWUnKTtcbiAgICAgICAgfVxuICAgIH07XG59O1xuZXhwb3J0cy5hZGROZXdTdGFja0xheWVyID0gYWRkTmV3U3RhY2tMYXllcjtcbmNvbnN0IHJlcGxhY2VDdXJyZW50U3RhY2tSb3V0ZSA9IChyZXF1ZXN0LCBuZXdSb3V0ZSkgPT4ge1xuICAgIGlmIChuZXdSb3V0ZSkge1xuICAgICAgICByZXF1ZXN0W2ludGVybmFsX3R5cGVzXzEuX0xBWUVSU19TVE9SRV9QUk9QRVJUWV0uc3BsaWNlKC0xLCAxLCBuZXdSb3V0ZSk7XG4gICAgfVxufTtcbmV4cG9ydHMucmVwbGFjZUN1cnJlbnRTdGFja1JvdXRlID0gcmVwbGFjZUN1cnJlbnRTdGFja1JvdXRlO1xuLy8gZ2VuZXJhdGUgcm91dGUgZnJvbSBleGlzdGluZyBzdGFjayBvbiByZXF1ZXN0IG9iamVjdC5cbi8vIHNwbGFzaCBiZXR3ZWVuIHN0YWNrIGxheWVyIHdpbGwgYmUgZGVkdXBlZFxuLy8gW1wiL2ZpcnN0L1wiLCBcIi9zZWNvbmRcIiwgXCIvdGhpcmQvXCJdID0+IC9maXJzdC9zZWNvbmQvdGhpcmQvXG5jb25zdCBnZW5lcmF0ZVJvdXRlID0gKHJlcXVlc3QpID0+IHtcbiAgICByZXR1cm4gcmVxdWVzdFtpbnRlcm5hbF90eXBlc18xLl9MQVlFUlNfU1RPUkVfUFJPUEVSVFldLnJlZHVjZSgoYWNjLCBzdWIpID0+IGFjYy5yZXBsYWNlKC9cXC8rJC8sICcnKSArIHN1Yik7XG59O1xuZXhwb3J0cy5nZW5lcmF0ZVJvdXRlID0gZ2VuZXJhdGVSb3V0ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/utils.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/version.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = \'0.43.1\';\nexports.PACKAGE_NAME = \'@opentelemetry/instrumentation-connect\';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWNvbm5lY3QvYnVpbGQvc3JjL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsdUJBQXVCO0FBQzlDO0FBQ0EsdUJBQXVCO0FBQ3ZCLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFwxXFxEb3dubG9hZHNcXHRhYm9yQWNhZGVteVVwZGF0ZWRcXHRhYm9yLWFjYWRlbXlcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvbi1jb25uZWN0XFxidWlsZFxcc3JjXFx2ZXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUEFDS0FHRV9OQU1FID0gZXhwb3J0cy5QQUNLQUdFX1ZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gJzAuNDMuMSc7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9ICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tY29ubmVjdCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-connect/build/src/version.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-dataloader/build/src/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./types */ "(ssr)/./node_modules/@opentelemetry/instrumentation-dataloader/build/src/types.js"), exports);\n__exportStar(__webpack_require__(/*! ./instrumentation */ "(ssr)/./node_modules/@opentelemetry/instrumentation-dataloader/build/src/instrumentation.js"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWRhdGFsb2FkZXIvYnVpbGQvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsa0dBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLHNIQUFtQjtBQUN4QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFwxXFxEb3dubG9hZHNcXHRhYm9yQWNhZGVteVVwZGF0ZWRcXHRhYm9yLWFjYWRlbXlcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvbi1kYXRhbG9hZGVyXFxidWlsZFxcc3JjXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaW5zdHJ1bWVudGF0aW9uXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-dataloader/build/src/index.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-dataloader/build/src/instrumentation.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DataloaderInstrumentation = void 0;\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(ssr)/./node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(ssr)/./node_modules/@opentelemetry/api/build/esm/index.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-dataloader/build/src/version.js\");\nconst MODULE_NAME = 'dataloader';\nclass DataloaderInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, config);\n    }\n    init() {\n        return [\n            new instrumentation_1.InstrumentationNodeModuleDefinition(MODULE_NAME, ['>=2.0.0 <3'], dataloader => {\n                this._patchLoad(dataloader.prototype);\n                this._patchLoadMany(dataloader.prototype);\n                return this._getPatchedConstructor(dataloader);\n            }, dataloader => {\n                if ((0, instrumentation_1.isWrapped)(dataloader.prototype.load)) {\n                    this._unwrap(dataloader.prototype, 'load');\n                }\n                if ((0, instrumentation_1.isWrapped)(dataloader.prototype.loadMany)) {\n                    this._unwrap(dataloader.prototype, 'loadMany');\n                }\n            }),\n        ];\n    }\n    shouldCreateSpans() {\n        const config = this.getConfig();\n        const hasParentSpan = api_1.trace.getSpan(api_1.context.active()) !== undefined;\n        return hasParentSpan || !config.requireParentSpan;\n    }\n    getSpanName(dataloader, operation) {\n        const dataloaderName = dataloader.name;\n        if (dataloaderName === undefined || dataloaderName === null) {\n            return `${MODULE_NAME}.${operation}`;\n        }\n        return `${MODULE_NAME}.${operation} ${dataloaderName}`;\n    }\n    _getPatchedConstructor(constructor) {\n        const prototype = constructor.prototype;\n        const instrumentation = this;\n        function PatchedDataloader(...args) {\n            const inst = new constructor(...args);\n            if (!instrumentation.isEnabled()) {\n                return inst;\n            }\n            if ((0, instrumentation_1.isWrapped)(inst._batchLoadFn)) {\n                instrumentation._unwrap(inst, '_batchLoadFn');\n            }\n            instrumentation._wrap(inst, '_batchLoadFn', original => {\n                return function patchedBatchLoadFn(...args) {\n                    var _a;\n                    if (!instrumentation.isEnabled() ||\n                        !instrumentation.shouldCreateSpans()) {\n                        return original.call(this, ...args);\n                    }\n                    const parent = api_1.context.active();\n                    const span = instrumentation.tracer.startSpan(instrumentation.getSpanName(inst, 'batch'), { links: (_a = this._batch) === null || _a === void 0 ? void 0 : _a.spanLinks }, parent);\n                    return api_1.context.with(api_1.trace.setSpan(parent, span), () => {\n                        return original.apply(this, args)\n                            .then(value => {\n                            span.end();\n                            return value;\n                        })\n                            .catch(err => {\n                            span.recordException(err);\n                            span.setStatus({\n                                code: api_1.SpanStatusCode.ERROR,\n                                message: err.message,\n                            });\n                            span.end();\n                            throw err;\n                        });\n                    });\n                };\n            });\n            return inst;\n        }\n        PatchedDataloader.prototype = prototype;\n        return PatchedDataloader;\n    }\n    _patchLoad(proto) {\n        if ((0, instrumentation_1.isWrapped)(proto.load)) {\n            this._unwrap(proto, 'load');\n        }\n        this._wrap(proto, 'load', this._getPatchedLoad.bind(this));\n    }\n    _getPatchedLoad(original) {\n        const instrumentation = this;\n        return function patchedLoad(...args) {\n            if (!instrumentation.shouldCreateSpans()) {\n                return original.call(this, ...args);\n            }\n            const parent = api_1.context.active();\n            const span = instrumentation.tracer.startSpan(instrumentation.getSpanName(this, 'load'), { kind: api_1.SpanKind.CLIENT }, parent);\n            return api_1.context.with(api_1.trace.setSpan(parent, span), () => {\n                const result = original\n                    .call(this, ...args)\n                    .then(value => {\n                    span.end();\n                    return value;\n                })\n                    .catch(err => {\n                    span.recordException(err);\n                    span.setStatus({\n                        code: api_1.SpanStatusCode.ERROR,\n                        message: err.message,\n                    });\n                    span.end();\n                    throw err;\n                });\n                const loader = this;\n                if (loader._batch) {\n                    if (!loader._batch.spanLinks) {\n                        loader._batch.spanLinks = [];\n                    }\n                    loader._batch.spanLinks.push({ context: span.spanContext() });\n                }\n                return result;\n            });\n        };\n    }\n    _patchLoadMany(proto) {\n        if ((0, instrumentation_1.isWrapped)(proto.loadMany)) {\n            this._unwrap(proto, 'loadMany');\n        }\n        this._wrap(proto, 'loadMany', this._getPatchedLoadMany.bind(this));\n    }\n    _getPatchedLoadMany(original) {\n        const instrumentation = this;\n        return function patchedLoadMany(...args) {\n            if (!instrumentation.shouldCreateSpans()) {\n                return original.call(this, ...args);\n            }\n            const parent = api_1.context.active();\n            const span = instrumentation.tracer.startSpan(instrumentation.getSpanName(this, 'loadMany'), { kind: api_1.SpanKind.CLIENT }, parent);\n            return api_1.context.with(api_1.trace.setSpan(parent, span), () => {\n                // .loadMany never rejects, as errors from internal .load\n                // calls are caught by dataloader lib\n                return original.call(this, ...args).then(value => {\n                    span.end();\n                    return value;\n                });\n            });\n        };\n    }\n}\nexports.DataloaderInstrumentation = DataloaderInstrumentation;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-dataloader/build/src/instrumentation.js\n")},"(ssr)/./node_modules/@opentelemetry/instrumentation-dataloader/build/src/types.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWRhdGFsb2FkZXIvYnVpbGQvc3JjL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXDFcXERvd25sb2Fkc1xcdGFib3JBY2FkZW15VXBkYXRlZFxcdGFib3ItYWNhZGVteVxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uLWRhdGFsb2FkZXJcXGJ1aWxkXFxzcmNcXHR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-dataloader/build/src/types.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-dataloader/build/src/version.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = \'0.16.1\';\nexports.PACKAGE_NAME = \'@opentelemetry/instrumentation-dataloader\';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWRhdGFsb2FkZXIvYnVpbGQvc3JjL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsdUJBQXVCO0FBQzlDO0FBQ0EsdUJBQXVCO0FBQ3ZCLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFwxXFxEb3dubG9hZHNcXHRhYm9yQWNhZGVteVVwZGF0ZWRcXHRhYm9yLWFjYWRlbXlcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvbi1kYXRhbG9hZGVyXFxidWlsZFxcc3JjXFx2ZXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUEFDS0FHRV9OQU1FID0gZXhwb3J0cy5QQUNLQUdFX1ZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gJzAuMTYuMSc7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9ICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZGF0YWxvYWRlcic7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-dataloader/build/src/version.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/enums/AttributeNames.js":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.AttributeNames = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar AttributeNames;\n(function (AttributeNames) {\n    AttributeNames["EXPRESS_TYPE"] = "express.type";\n    AttributeNames["EXPRESS_NAME"] = "express.name";\n})(AttributeNames = exports.AttributeNames || (exports.AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWV4cHJlc3MvYnVpbGQvc3JjL2VudW1zL0F0dHJpYnV0ZU5hbWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDLHNCQUFzQixLQUFLO0FBQzFFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXDFcXERvd25sb2Fkc1xcdGFib3JBY2FkZW15VXBkYXRlZFxcdGFib3ItYWNhZGVteVxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uLWV4cHJlc3NcXGJ1aWxkXFxzcmNcXGVudW1zXFxBdHRyaWJ1dGVOYW1lcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXR0cmlidXRlTmFtZXMgPSB2b2lkIDA7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIEF0dHJpYnV0ZU5hbWVzO1xuKGZ1bmN0aW9uIChBdHRyaWJ1dGVOYW1lcykge1xuICAgIEF0dHJpYnV0ZU5hbWVzW1wiRVhQUkVTU19UWVBFXCJdID0gXCJleHByZXNzLnR5cGVcIjtcbiAgICBBdHRyaWJ1dGVOYW1lc1tcIkVYUFJFU1NfTkFNRVwiXSA9IFwiZXhwcmVzcy5uYW1lXCI7XG59KShBdHRyaWJ1dGVOYW1lcyA9IGV4cG9ydHMuQXR0cmlidXRlTmFtZXMgfHwgKGV4cG9ydHMuQXR0cmlidXRlTmFtZXMgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXR0cmlidXRlTmFtZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/enums/AttributeNames.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/enums/ExpressLayerType.js":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.ExpressLayerType = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ExpressLayerType;\n(function (ExpressLayerType) {\n    ExpressLayerType["ROUTER"] = "router";\n    ExpressLayerType["MIDDLEWARE"] = "middleware";\n    ExpressLayerType["REQUEST_HANDLER"] = "request_handler";\n})(ExpressLayerType = exports.ExpressLayerType || (exports.ExpressLayerType = {}));\n//# sourceMappingURL=ExpressLayerType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWV4cHJlc3MvYnVpbGQvc3JjL2VudW1zL0V4cHJlc3NMYXllclR5cGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtEQUFrRCx3QkFBd0IsS0FBSztBQUNoRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFwxXFxEb3dubG9hZHNcXHRhYm9yQWNhZGVteVVwZGF0ZWRcXHRhYm9yLWFjYWRlbXlcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvbi1leHByZXNzXFxidWlsZFxcc3JjXFxlbnVtc1xcRXhwcmVzc0xheWVyVHlwZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXhwcmVzc0xheWVyVHlwZSA9IHZvaWQgMDtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgRXhwcmVzc0xheWVyVHlwZTtcbihmdW5jdGlvbiAoRXhwcmVzc0xheWVyVHlwZSkge1xuICAgIEV4cHJlc3NMYXllclR5cGVbXCJST1VURVJcIl0gPSBcInJvdXRlclwiO1xuICAgIEV4cHJlc3NMYXllclR5cGVbXCJNSURETEVXQVJFXCJdID0gXCJtaWRkbGV3YXJlXCI7XG4gICAgRXhwcmVzc0xheWVyVHlwZVtcIlJFUVVFU1RfSEFORExFUlwiXSA9IFwicmVxdWVzdF9oYW5kbGVyXCI7XG59KShFeHByZXNzTGF5ZXJUeXBlID0gZXhwb3J0cy5FeHByZXNzTGF5ZXJUeXBlIHx8IChleHBvcnRzLkV4cHJlc3NMYXllclR5cGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXhwcmVzc0xheWVyVHlwZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/enums/ExpressLayerType.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./instrumentation */ "(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/instrumentation.js"), exports);\n__exportStar(__webpack_require__(/*! ./enums/ExpressLayerType */ "(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/enums/ExpressLayerType.js"), exports);\n__exportStar(__webpack_require__(/*! ./enums/AttributeNames */ "(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/enums/AttributeNames.js"), exports);\n__exportStar(__webpack_require__(/*! ./types */ "(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/types.js"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWV4cHJlc3MvYnVpbGQvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsbUhBQW1CO0FBQ3hDLGFBQWEsbUJBQU8sQ0FBQyxpSUFBMEI7QUFDL0MsYUFBYSxtQkFBTyxDQUFDLDZIQUF3QjtBQUM3QyxhQUFhLG1CQUFPLENBQUMsK0ZBQVM7QUFDOUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcMVxcRG93bmxvYWRzXFx0YWJvckFjYWRlbXlVcGRhdGVkXFx0YWJvci1hY2FkZW15XFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxpbnN0cnVtZW50YXRpb24tZXhwcmVzc1xcYnVpbGRcXHNyY1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaW5zdHJ1bWVudGF0aW9uXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lbnVtcy9FeHByZXNzTGF5ZXJUeXBlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lbnVtcy9BdHRyaWJ1dGVOYW1lc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/index.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/instrumentation.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ExpressInstrumentation = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"(ssr)/./node_modules/@opentelemetry/core/build/esm/index.js\");\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(ssr)/./node_modules/@opentelemetry/api/build/esm/index.js\");\nconst ExpressLayerType_1 = __webpack_require__(/*! ./enums/ExpressLayerType */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/enums/ExpressLayerType.js\");\nconst AttributeNames_1 = __webpack_require__(/*! ./enums/AttributeNames */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/enums/AttributeNames.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/utils.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/version.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(ssr)/./node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(ssr)/./node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst internal_types_1 = __webpack_require__(/*! ./internal-types */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/internal-types.js\");\n/** Express instrumentation for OpenTelemetry */\nclass ExpressInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, config);\n    }\n    init() {\n        return [\n            new instrumentation_1.InstrumentationNodeModuleDefinition('express', ['>=4.0.0 <5'], moduleExports => {\n                const routerProto = moduleExports.Router;\n                // patch express.Router.route\n                if ((0, instrumentation_1.isWrapped)(routerProto.route)) {\n                    this._unwrap(routerProto, 'route');\n                }\n                this._wrap(routerProto, 'route', this._getRoutePatch());\n                // patch express.Router.use\n                if ((0, instrumentation_1.isWrapped)(routerProto.use)) {\n                    this._unwrap(routerProto, 'use');\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._wrap(routerProto, 'use', this._getRouterUsePatch());\n                // patch express.Application.use\n                if ((0, instrumentation_1.isWrapped)(moduleExports.application.use)) {\n                    this._unwrap(moduleExports.application, 'use');\n                }\n                this._wrap(moduleExports.application, 'use', \n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._getAppUsePatch());\n                return moduleExports;\n            }, moduleExports => {\n                if (moduleExports === undefined)\n                    return;\n                const routerProto = moduleExports.Router;\n                this._unwrap(routerProto, 'route');\n                this._unwrap(routerProto, 'use');\n                this._unwrap(moduleExports.application, 'use');\n            }),\n        ];\n    }\n    /**\n     * Get the patch for Router.route function\n     */\n    _getRoutePatch() {\n        const instrumentation = this;\n        return function (original) {\n            return function route_trace(...args) {\n                const route = original.apply(this, args);\n                const layer = this.stack[this.stack.length - 1];\n                instrumentation._applyPatch(layer, (0, utils_1.getLayerPath)(args));\n                return route;\n            };\n        };\n    }\n    /**\n     * Get the patch for Router.use function\n     */\n    _getRouterUsePatch() {\n        const instrumentation = this;\n        return function (original) {\n            return function use(...args) {\n                const route = original.apply(this, args);\n                const layer = this.stack[this.stack.length - 1];\n                instrumentation._applyPatch(layer, (0, utils_1.getLayerPath)(args));\n                return route;\n            };\n        };\n    }\n    /**\n     * Get the patch for Application.use function\n     */\n    _getAppUsePatch() {\n        const instrumentation = this;\n        return function (original) {\n            return function use(...args) {\n                const route = original.apply(this, args);\n                const layer = this._router.stack[this._router.stack.length - 1];\n                instrumentation._applyPatch(layer, (0, utils_1.getLayerPath)(args));\n                return route;\n            };\n        };\n    }\n    /** Patch each express layer to create span and propagate context */\n    _applyPatch(layer, layerPath) {\n        const instrumentation = this;\n        // avoid patching multiple times the same layer\n        if (layer[internal_types_1.kLayerPatched] === true)\n            return;\n        layer[internal_types_1.kLayerPatched] = true;\n        this._wrap(layer, 'handle', original => {\n            // TODO: instrument error handlers\n            if (original.length === 4)\n                return original;\n            const patched = function (req, res) {\n                (0, utils_1.storeLayerPath)(req, layerPath);\n                const route = req[internal_types_1._LAYERS_STORE_PROPERTY]\n                    .filter(path => path !== '/' && path !== '/*')\n                    .join('')\n                    // remove duplicate slashes to normalize route\n                    .replace(/\\/{2,}/g, '/');\n                const attributes = {\n                    [semantic_conventions_1.SEMATTRS_HTTP_ROUTE]: route.length > 0 ? route : '/',\n                };\n                const metadata = (0, utils_1.getLayerMetadata)(route, layer, layerPath);\n                const type = metadata.attributes[AttributeNames_1.AttributeNames.EXPRESS_TYPE];\n                const rpcMetadata = (0, core_1.getRPCMetadata)(api_1.context.active());\n                if ((rpcMetadata === null || rpcMetadata === void 0 ? void 0 : rpcMetadata.type) === core_1.RPCType.HTTP) {\n                    rpcMetadata.route = route || '/';\n                }\n                // verify against the config if the layer should be ignored\n                if ((0, utils_1.isLayerIgnored)(metadata.name, type, instrumentation.getConfig())) {\n                    if (type === ExpressLayerType_1.ExpressLayerType.MIDDLEWARE) {\n                        req[internal_types_1._LAYERS_STORE_PROPERTY].pop();\n                    }\n                    return original.apply(this, arguments);\n                }\n                if (api_1.trace.getSpan(api_1.context.active()) === undefined) {\n                    return original.apply(this, arguments);\n                }\n                const spanName = instrumentation._getSpanName({\n                    request: req,\n                    layerType: type,\n                    route,\n                }, metadata.name);\n                const span = instrumentation.tracer.startSpan(spanName, {\n                    attributes: Object.assign(attributes, metadata.attributes),\n                });\n                const { requestHook } = instrumentation.getConfig();\n                if (requestHook) {\n                    (0, instrumentation_1.safeExecuteInTheMiddle)(() => requestHook(span, {\n                        request: req,\n                        layerType: type,\n                        route,\n                    }), e => {\n                        if (e) {\n                            api_1.diag.error('express instrumentation: request hook failed', e);\n                        }\n                    }, true);\n                }\n                let spanHasEnded = false;\n                if (metadata.attributes[AttributeNames_1.AttributeNames.EXPRESS_TYPE] !==\n                    ExpressLayerType_1.ExpressLayerType.MIDDLEWARE) {\n                    span.end();\n                    spanHasEnded = true;\n                }\n                // listener for response.on('finish')\n                const onResponseFinish = () => {\n                    if (spanHasEnded === false) {\n                        spanHasEnded = true;\n                        span.end();\n                    }\n                };\n                // verify we have a callback\n                const args = Array.from(arguments);\n                const callbackIdx = args.findIndex(arg => typeof arg === 'function');\n                if (callbackIdx >= 0) {\n                    arguments[callbackIdx] = function () {\n                        var _a;\n                        // express considers anything but an empty value, \"route\" or \"router\"\n                        // passed to its callback to be an error\n                        const maybeError = arguments[0];\n                        const isError = ![undefined, null, 'route', 'router'].includes(maybeError);\n                        if (!spanHasEnded && isError) {\n                            const [error, message] = (0, utils_1.asErrorAndMessage)(maybeError);\n                            span.recordException(error);\n                            span.setStatus({\n                                code: api_1.SpanStatusCode.ERROR,\n                                message,\n                            });\n                        }\n                        if (spanHasEnded === false) {\n                            spanHasEnded = true;\n                            (_a = req.res) === null || _a === void 0 ? void 0 : _a.removeListener('finish', onResponseFinish);\n                            span.end();\n                        }\n                        if (!(req.route && isError)) {\n                            req[internal_types_1._LAYERS_STORE_PROPERTY].pop();\n                        }\n                        const callback = args[callbackIdx];\n                        return callback.apply(this, arguments);\n                    };\n                }\n                try {\n                    return original.apply(this, arguments);\n                }\n                catch (anyError) {\n                    const [error, message] = (0, utils_1.asErrorAndMessage)(anyError);\n                    span.recordException(error);\n                    span.setStatus({\n                        code: api_1.SpanStatusCode.ERROR,\n                        message,\n                    });\n                    throw anyError;\n                }\n                finally {\n                    /**\n                     * At this point if the callback wasn't called, that means either the\n                     * layer is asynchronous (so it will call the callback later on) or that\n                     * the layer directly end the http response, so we'll hook into the \"finish\"\n                     * event to handle the later case.\n                     */\n                    if (!spanHasEnded) {\n                        res.once('finish', onResponseFinish);\n                    }\n                }\n            };\n            // `handle` isn't just a regular function in some cases. It also contains\n            // some properties holding metadata and state so we need to proxy them\n            // through through patched function\n            // ref: https://github.com/open-telemetry/opentelemetry-js-contrib/issues/1950\n            // Also some apps/libs do their own patching before OTEL and have these properties\n            // in the proptotype. So we use a `for...in` loop to get own properties and also\n            // any enumerable prop in the prototype chain\n            // ref: https://github.com/open-telemetry/opentelemetry-js-contrib/issues/2271\n            for (const key in original) {\n                Object.defineProperty(patched, key, {\n                    get() {\n                        return original[key];\n                    },\n                    set(value) {\n                        original[key] = value;\n                    },\n                });\n            }\n            return patched;\n        });\n    }\n    _getSpanName(info, defaultName) {\n        var _a;\n        const { spanNameHook } = this.getConfig();\n        if (!(spanNameHook instanceof Function)) {\n            return defaultName;\n        }\n        try {\n            return (_a = spanNameHook(info, defaultName)) !== null && _a !== void 0 ? _a : defaultName;\n        }\n        catch (err) {\n            api_1.diag.error('express instrumentation: error calling span name rewrite hook', err);\n            return defaultName;\n        }\n    }\n}\nexports.ExpressInstrumentation = ExpressInstrumentation;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/instrumentation.js\n")},"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/internal-types.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports._LAYERS_STORE_PROPERTY = exports.kLayerPatched = void 0;\n/**\n * This symbol is used to mark express layer as being already instrumented\n * since its possible to use a given layer multiple times (ex: middlewares)\n */\nexports.kLayerPatched = Symbol(\'express-layer-patched\');\n/**\n * This const define where on the `request` object the Instrumentation will mount the\n * current stack of express layer.\n *\n * It is necessary because express doesn\'t store the different layers\n * (ie: middleware, router etc) that it called to get to the current layer.\n * Given that, the only way to know the route of a given layer is to\n * store the path of where each previous layer has been mounted.\n *\n * ex: bodyParser > auth middleware > /users router > get /:id\n *  in this case the stack would be: ["/users", "/:id"]\n *\n * ex2: bodyParser > /api router > /v1 router > /users router > get /:id\n *  stack: ["/api", "/v1", "/users", ":id"]\n *\n */\nexports._LAYERS_STORE_PROPERTY = \'__ot_middlewares\';\n//# sourceMappingURL=internal-types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWV4cHJlc3MvYnVpbGQvc3JjL2ludGVybmFsLXR5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QixHQUFHLHFCQUFxQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFwxXFxEb3dubG9hZHNcXHRhYm9yQWNhZGVteVVwZGF0ZWRcXHRhYm9yLWFjYWRlbXlcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvbi1leHByZXNzXFxidWlsZFxcc3JjXFxpbnRlcm5hbC10eXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLl9MQVlFUlNfU1RPUkVfUFJPUEVSVFkgPSBleHBvcnRzLmtMYXllclBhdGNoZWQgPSB2b2lkIDA7XG4vKipcbiAqIFRoaXMgc3ltYm9sIGlzIHVzZWQgdG8gbWFyayBleHByZXNzIGxheWVyIGFzIGJlaW5nIGFscmVhZHkgaW5zdHJ1bWVudGVkXG4gKiBzaW5jZSBpdHMgcG9zc2libGUgdG8gdXNlIGEgZ2l2ZW4gbGF5ZXIgbXVsdGlwbGUgdGltZXMgKGV4OiBtaWRkbGV3YXJlcylcbiAqL1xuZXhwb3J0cy5rTGF5ZXJQYXRjaGVkID0gU3ltYm9sKCdleHByZXNzLWxheWVyLXBhdGNoZWQnKTtcbi8qKlxuICogVGhpcyBjb25zdCBkZWZpbmUgd2hlcmUgb24gdGhlIGByZXF1ZXN0YCBvYmplY3QgdGhlIEluc3RydW1lbnRhdGlvbiB3aWxsIG1vdW50IHRoZVxuICogY3VycmVudCBzdGFjayBvZiBleHByZXNzIGxheWVyLlxuICpcbiAqIEl0IGlzIG5lY2Vzc2FyeSBiZWNhdXNlIGV4cHJlc3MgZG9lc24ndCBzdG9yZSB0aGUgZGlmZmVyZW50IGxheWVyc1xuICogKGllOiBtaWRkbGV3YXJlLCByb3V0ZXIgZXRjKSB0aGF0IGl0IGNhbGxlZCB0byBnZXQgdG8gdGhlIGN1cnJlbnQgbGF5ZXIuXG4gKiBHaXZlbiB0aGF0LCB0aGUgb25seSB3YXkgdG8ga25vdyB0aGUgcm91dGUgb2YgYSBnaXZlbiBsYXllciBpcyB0b1xuICogc3RvcmUgdGhlIHBhdGggb2Ygd2hlcmUgZWFjaCBwcmV2aW91cyBsYXllciBoYXMgYmVlbiBtb3VudGVkLlxuICpcbiAqIGV4OiBib2R5UGFyc2VyID4gYXV0aCBtaWRkbGV3YXJlID4gL3VzZXJzIHJvdXRlciA+IGdldCAvOmlkXG4gKiAgaW4gdGhpcyBjYXNlIHRoZSBzdGFjayB3b3VsZCBiZTogW1wiL3VzZXJzXCIsIFwiLzppZFwiXVxuICpcbiAqIGV4MjogYm9keVBhcnNlciA+IC9hcGkgcm91dGVyID4gL3YxIHJvdXRlciA+IC91c2VycyByb3V0ZXIgPiBnZXQgLzppZFxuICogIHN0YWNrOiBbXCIvYXBpXCIsIFwiL3YxXCIsIFwiL3VzZXJzXCIsIFwiOmlkXCJdXG4gKlxuICovXG5leHBvcnRzLl9MQVlFUlNfU1RPUkVfUFJPUEVSVFkgPSAnX19vdF9taWRkbGV3YXJlcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcm5hbC10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/internal-types.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/types.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWV4cHJlc3MvYnVpbGQvc3JjL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXDFcXERvd25sb2Fkc1xcdGFib3JBY2FkZW15VXBkYXRlZFxcdGFib3ItYWNhZGVteVxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uLWV4cHJlc3NcXGJ1aWxkXFxzcmNcXHR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/types.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getLayerPath = exports.asErrorAndMessage = exports.isLayerIgnored = exports.getLayerMetadata = exports.getRouterPath = exports.storeLayerPath = void 0;\nconst ExpressLayerType_1 = __webpack_require__(/*! ./enums/ExpressLayerType */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/enums/ExpressLayerType.js\");\nconst AttributeNames_1 = __webpack_require__(/*! ./enums/AttributeNames */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/enums/AttributeNames.js\");\nconst internal_types_1 = __webpack_require__(/*! ./internal-types */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/internal-types.js\");\n/**\n * Store layers path in the request to be able to construct route later\n * @param request The request where\n * @param [value] the value to push into the array\n */\nconst storeLayerPath = (request, value) => {\n    if (Array.isArray(request[internal_types_1._LAYERS_STORE_PROPERTY]) === false) {\n        Object.defineProperty(request, internal_types_1._LAYERS_STORE_PROPERTY, {\n            enumerable: false,\n            value: [],\n        });\n    }\n    if (value === undefined)\n        return;\n    request[internal_types_1._LAYERS_STORE_PROPERTY].push(value);\n};\nexports.storeLayerPath = storeLayerPath;\n/**\n * Recursively search the router path from layer stack\n * @param path The path to reconstruct\n * @param layer The layer to reconstruct from\n * @returns The reconstructed path\n */\nconst getRouterPath = (path, layer) => {\n    var _a, _b, _c, _d;\n    const stackLayer = (_b = (_a = layer.handle) === null || _a === void 0 ? void 0 : _a.stack) === null || _b === void 0 ? void 0 : _b[0];\n    if ((_c = stackLayer === null || stackLayer === void 0 ? void 0 : stackLayer.route) === null || _c === void 0 ? void 0 : _c.path) {\n        return `${path}${stackLayer.route.path}`;\n    }\n    if ((_d = stackLayer === null || stackLayer === void 0 ? void 0 : stackLayer.handle) === null || _d === void 0 ? void 0 : _d.stack) {\n        return (0, exports.getRouterPath)(path, stackLayer);\n    }\n    return path;\n};\nexports.getRouterPath = getRouterPath;\n/**\n * Parse express layer context to retrieve a name and attributes.\n * @param route The route of the layer\n * @param layer Express layer\n * @param [layerPath] if present, the path on which the layer has been mounted\n */\nconst getLayerMetadata = (route, layer, layerPath) => {\n    var _a;\n    if (layer.name === 'router') {\n        const maybeRouterPath = (0, exports.getRouterPath)('', layer);\n        const extractedRouterPath = maybeRouterPath\n            ? maybeRouterPath\n            : layerPath || route || '/';\n        return {\n            attributes: {\n                [AttributeNames_1.AttributeNames.EXPRESS_NAME]: extractedRouterPath,\n                [AttributeNames_1.AttributeNames.EXPRESS_TYPE]: ExpressLayerType_1.ExpressLayerType.ROUTER,\n            },\n            name: `router - ${extractedRouterPath}`,\n        };\n    }\n    else if (layer.name === 'bound dispatch') {\n        return {\n            attributes: {\n                [AttributeNames_1.AttributeNames.EXPRESS_NAME]: (_a = (route || layerPath)) !== null && _a !== void 0 ? _a : 'request handler',\n                [AttributeNames_1.AttributeNames.EXPRESS_TYPE]: ExpressLayerType_1.ExpressLayerType.REQUEST_HANDLER,\n            },\n            name: `request handler${layer.path ? ` - ${route || layerPath}` : ''}`,\n        };\n    }\n    else {\n        return {\n            attributes: {\n                [AttributeNames_1.AttributeNames.EXPRESS_NAME]: layer.name,\n                [AttributeNames_1.AttributeNames.EXPRESS_TYPE]: ExpressLayerType_1.ExpressLayerType.MIDDLEWARE,\n            },\n            name: `middleware - ${layer.name}`,\n        };\n    }\n};\nexports.getLayerMetadata = getLayerMetadata;\n/**\n * Check whether the given obj match pattern\n * @param constant e.g URL of request\n * @param obj obj to inspect\n * @param pattern Match pattern\n */\nconst satisfiesPattern = (constant, pattern) => {\n    if (typeof pattern === 'string') {\n        return pattern === constant;\n    }\n    else if (pattern instanceof RegExp) {\n        return pattern.test(constant);\n    }\n    else if (typeof pattern === 'function') {\n        return pattern(constant);\n    }\n    else {\n        throw new TypeError('Pattern is in unsupported datatype');\n    }\n};\n/**\n * Check whether the given request is ignored by configuration\n * It will not re-throw exceptions from `list` provided by the client\n * @param constant e.g URL of request\n * @param [list] List of ignore patterns\n * @param [onException] callback for doing something when an exception has\n *     occurred\n */\nconst isLayerIgnored = (name, type, config) => {\n    var _a;\n    if (Array.isArray(config === null || config === void 0 ? void 0 : config.ignoreLayersType) &&\n        ((_a = config === null || config === void 0 ? void 0 : config.ignoreLayersType) === null || _a === void 0 ? void 0 : _a.includes(type))) {\n        return true;\n    }\n    if (Array.isArray(config === null || config === void 0 ? void 0 : config.ignoreLayers) === false)\n        return false;\n    try {\n        for (const pattern of config.ignoreLayers) {\n            if (satisfiesPattern(name, pattern)) {\n                return true;\n            }\n        }\n    }\n    catch (e) {\n        /* catch block*/\n    }\n    return false;\n};\nexports.isLayerIgnored = isLayerIgnored;\n/**\n * Converts a user-provided error value into an error and error message pair\n *\n * @param error - User-provided error value\n * @returns Both an Error or string representation of the value and an error message\n */\nconst asErrorAndMessage = (error) => error instanceof Error\n    ? [error, error.message]\n    : [String(error), String(error)];\nexports.asErrorAndMessage = asErrorAndMessage;\n/**\n * Extracts the layer path from the route arguments\n *\n * @param args - Arguments of the route\n * @returns The layer path\n */\nconst getLayerPath = (args) => {\n    const firstArg = args[0];\n    if (Array.isArray(firstArg)) {\n        return firstArg.map(arg => extractLayerPathSegment(arg) || '').join(',');\n    }\n    return extractLayerPathSegment(firstArg);\n};\nexports.getLayerPath = getLayerPath;\nconst extractLayerPathSegment = (arg) => {\n    if (typeof arg === 'string') {\n        return arg;\n    }\n    if (arg instanceof RegExp || typeof arg === 'number') {\n        return arg.toString();\n    }\n    return;\n};\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/utils.js\n")},"(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/version.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = \'0.47.1\';\nexports.PACKAGE_NAME = \'@opentelemetry/instrumentation-express\';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWV4cHJlc3MvYnVpbGQvc3JjL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsdUJBQXVCO0FBQzlDO0FBQ0EsdUJBQXVCO0FBQ3ZCLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFwxXFxEb3dubG9hZHNcXHRhYm9yQWNhZGVteVVwZGF0ZWRcXHRhYm9yLWFjYWRlbXlcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvbi1leHByZXNzXFxidWlsZFxcc3JjXFx2ZXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUEFDS0FHRV9OQU1FID0gZXhwb3J0cy5QQUNLQUdFX1ZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gJzAuNDcuMSc7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9ICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZXhwcmVzcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-express/build/src/version.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/constants.js":(__unused_webpack_module,exports)=>{eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SYNC_FUNCTIONS = exports.CALLBACK_FUNCTIONS = exports.PROMISE_FUNCTIONS = void 0;\nexports.PROMISE_FUNCTIONS = [\n    'access',\n    'appendFile',\n    'chmod',\n    'chown',\n    'copyFile',\n    'cp',\n    'lchown',\n    'link',\n    'lstat',\n    'lutimes',\n    'mkdir',\n    'mkdtemp',\n    'open',\n    'opendir',\n    'readdir',\n    'readFile',\n    'readlink',\n    'realpath',\n    'rename',\n    'rm',\n    'rmdir',\n    'stat',\n    'symlink',\n    'truncate',\n    'unlink',\n    'utimes',\n    'writeFile',\n    // 'lchmod', // only implemented on macOS\n];\nexports.CALLBACK_FUNCTIONS = [\n    'access',\n    'appendFile',\n    'chmod',\n    'chown',\n    'copyFile',\n    'cp',\n    'exists',\n    'lchown',\n    'link',\n    'lstat',\n    'lutimes',\n    'mkdir',\n    'mkdtemp',\n    'open',\n    'opendir',\n    'readdir',\n    'readFile',\n    'readlink',\n    'realpath',\n    'realpath.native',\n    'rename',\n    'rm',\n    'rmdir',\n    'stat',\n    'symlink',\n    'truncate',\n    'unlink',\n    'utimes',\n    'writeFile',\n    // 'close', // functions on file descriptor\n    // 'fchmod', // functions on file descriptor\n    // 'fchown', // functions on file descriptor\n    // 'fdatasync', // functions on file descriptor\n    // 'fstat', // functions on file descriptor\n    // 'fsync', // functions on file descriptor\n    // 'ftruncate', // functions on file descriptor\n    // 'futimes', // functions on file descriptor\n    // 'lchmod', // only implemented on macOS\n    // 'read', // functions on file descriptor\n    // 'readv', // functions on file descriptor\n    // 'write', // functions on file descriptor\n    // 'writev', // functions on file descriptor\n];\nexports.SYNC_FUNCTIONS = [\n    'accessSync',\n    'appendFileSync',\n    'chmodSync',\n    'chownSync',\n    'copyFileSync',\n    'cpSync',\n    'existsSync',\n    'lchownSync',\n    'linkSync',\n    'lstatSync',\n    'lutimesSync',\n    'mkdirSync',\n    'mkdtempSync',\n    'opendirSync',\n    'openSync',\n    'readdirSync',\n    'readFileSync',\n    'readlinkSync',\n    'realpathSync',\n    'realpathSync.native',\n    'renameSync',\n    'rmdirSync',\n    'rmSync',\n    'statSync',\n    'symlinkSync',\n    'truncateSync',\n    'unlinkSync',\n    'utimesSync',\n    'writeFileSync',\n    // 'closeSync', // functions on file descriptor\n    // 'fchmodSync', // functions on file descriptor\n    // 'fchownSync', // functions on file descriptor\n    // 'fdatasyncSync', // functions on file descriptor\n    // 'fstatSync', // functions on file descriptor\n    // 'fsyncSync', // functions on file descriptor\n    // 'ftruncateSync', // functions on file descriptor\n    // 'futimesSync', // functions on file descriptor\n    // 'lchmodSync', // only implemented on macOS\n    // 'readSync', // functions on file descriptor\n    // 'readvSync', // functions on file descriptor\n    // 'writeSync', // functions on file descriptor\n    // 'writevSync', // functions on file descriptor\n];\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWZzL2J1aWxkL3NyYy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCLEdBQUcsMEJBQTBCLEdBQUcseUJBQXlCO0FBQy9FLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcMVxcRG93bmxvYWRzXFx0YWJvckFjYWRlbXlVcGRhdGVkXFx0YWJvci1hY2FkZW15XFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxpbnN0cnVtZW50YXRpb24tZnNcXGJ1aWxkXFxzcmNcXGNvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNZTkNfRlVOQ1RJT05TID0gZXhwb3J0cy5DQUxMQkFDS19GVU5DVElPTlMgPSBleHBvcnRzLlBST01JU0VfRlVOQ1RJT05TID0gdm9pZCAwO1xuZXhwb3J0cy5QUk9NSVNFX0ZVTkNUSU9OUyA9IFtcbiAgICAnYWNjZXNzJyxcbiAgICAnYXBwZW5kRmlsZScsXG4gICAgJ2NobW9kJyxcbiAgICAnY2hvd24nLFxuICAgICdjb3B5RmlsZScsXG4gICAgJ2NwJyxcbiAgICAnbGNob3duJyxcbiAgICAnbGluaycsXG4gICAgJ2xzdGF0JyxcbiAgICAnbHV0aW1lcycsXG4gICAgJ21rZGlyJyxcbiAgICAnbWtkdGVtcCcsXG4gICAgJ29wZW4nLFxuICAgICdvcGVuZGlyJyxcbiAgICAncmVhZGRpcicsXG4gICAgJ3JlYWRGaWxlJyxcbiAgICAncmVhZGxpbmsnLFxuICAgICdyZWFscGF0aCcsXG4gICAgJ3JlbmFtZScsXG4gICAgJ3JtJyxcbiAgICAncm1kaXInLFxuICAgICdzdGF0JyxcbiAgICAnc3ltbGluaycsXG4gICAgJ3RydW5jYXRlJyxcbiAgICAndW5saW5rJyxcbiAgICAndXRpbWVzJyxcbiAgICAnd3JpdGVGaWxlJyxcbiAgICAvLyAnbGNobW9kJywgLy8gb25seSBpbXBsZW1lbnRlZCBvbiBtYWNPU1xuXTtcbmV4cG9ydHMuQ0FMTEJBQ0tfRlVOQ1RJT05TID0gW1xuICAgICdhY2Nlc3MnLFxuICAgICdhcHBlbmRGaWxlJyxcbiAgICAnY2htb2QnLFxuICAgICdjaG93bicsXG4gICAgJ2NvcHlGaWxlJyxcbiAgICAnY3AnLFxuICAgICdleGlzdHMnLFxuICAgICdsY2hvd24nLFxuICAgICdsaW5rJyxcbiAgICAnbHN0YXQnLFxuICAgICdsdXRpbWVzJyxcbiAgICAnbWtkaXInLFxuICAgICdta2R0ZW1wJyxcbiAgICAnb3BlbicsXG4gICAgJ29wZW5kaXInLFxuICAgICdyZWFkZGlyJyxcbiAgICAncmVhZEZpbGUnLFxuICAgICdyZWFkbGluaycsXG4gICAgJ3JlYWxwYXRoJyxcbiAgICAncmVhbHBhdGgubmF0aXZlJyxcbiAgICAncmVuYW1lJyxcbiAgICAncm0nLFxuICAgICdybWRpcicsXG4gICAgJ3N0YXQnLFxuICAgICdzeW1saW5rJyxcbiAgICAndHJ1bmNhdGUnLFxuICAgICd1bmxpbmsnLFxuICAgICd1dGltZXMnLFxuICAgICd3cml0ZUZpbGUnLFxuICAgIC8vICdjbG9zZScsIC8vIGZ1bmN0aW9ucyBvbiBmaWxlIGRlc2NyaXB0b3JcbiAgICAvLyAnZmNobW9kJywgLy8gZnVuY3Rpb25zIG9uIGZpbGUgZGVzY3JpcHRvclxuICAgIC8vICdmY2hvd24nLCAvLyBmdW5jdGlvbnMgb24gZmlsZSBkZXNjcmlwdG9yXG4gICAgLy8gJ2ZkYXRhc3luYycsIC8vIGZ1bmN0aW9ucyBvbiBmaWxlIGRlc2NyaXB0b3JcbiAgICAvLyAnZnN0YXQnLCAvLyBmdW5jdGlvbnMgb24gZmlsZSBkZXNjcmlwdG9yXG4gICAgLy8gJ2ZzeW5jJywgLy8gZnVuY3Rpb25zIG9uIGZpbGUgZGVzY3JpcHRvclxuICAgIC8vICdmdHJ1bmNhdGUnLCAvLyBmdW5jdGlvbnMgb24gZmlsZSBkZXNjcmlwdG9yXG4gICAgLy8gJ2Z1dGltZXMnLCAvLyBmdW5jdGlvbnMgb24gZmlsZSBkZXNjcmlwdG9yXG4gICAgLy8gJ2xjaG1vZCcsIC8vIG9ubHkgaW1wbGVtZW50ZWQgb24gbWFjT1NcbiAgICAvLyAncmVhZCcsIC8vIGZ1bmN0aW9ucyBvbiBmaWxlIGRlc2NyaXB0b3JcbiAgICAvLyAncmVhZHYnLCAvLyBmdW5jdGlvbnMgb24gZmlsZSBkZXNjcmlwdG9yXG4gICAgLy8gJ3dyaXRlJywgLy8gZnVuY3Rpb25zIG9uIGZpbGUgZGVzY3JpcHRvclxuICAgIC8vICd3cml0ZXYnLCAvLyBmdW5jdGlvbnMgb24gZmlsZSBkZXNjcmlwdG9yXG5dO1xuZXhwb3J0cy5TWU5DX0ZVTkNUSU9OUyA9IFtcbiAgICAnYWNjZXNzU3luYycsXG4gICAgJ2FwcGVuZEZpbGVTeW5jJyxcbiAgICAnY2htb2RTeW5jJyxcbiAgICAnY2hvd25TeW5jJyxcbiAgICAnY29weUZpbGVTeW5jJyxcbiAgICAnY3BTeW5jJyxcbiAgICAnZXhpc3RzU3luYycsXG4gICAgJ2xjaG93blN5bmMnLFxuICAgICdsaW5rU3luYycsXG4gICAgJ2xzdGF0U3luYycsXG4gICAgJ2x1dGltZXNTeW5jJyxcbiAgICAnbWtkaXJTeW5jJyxcbiAgICAnbWtkdGVtcFN5bmMnLFxuICAgICdvcGVuZGlyU3luYycsXG4gICAgJ29wZW5TeW5jJyxcbiAgICAncmVhZGRpclN5bmMnLFxuICAgICdyZWFkRmlsZVN5bmMnLFxuICAgICdyZWFkbGlua1N5bmMnLFxuICAgICdyZWFscGF0aFN5bmMnLFxuICAgICdyZWFscGF0aFN5bmMubmF0aXZlJyxcbiAgICAncmVuYW1lU3luYycsXG4gICAgJ3JtZGlyU3luYycsXG4gICAgJ3JtU3luYycsXG4gICAgJ3N0YXRTeW5jJyxcbiAgICAnc3ltbGlua1N5bmMnLFxuICAgICd0cnVuY2F0ZVN5bmMnLFxuICAgICd1bmxpbmtTeW5jJyxcbiAgICAndXRpbWVzU3luYycsXG4gICAgJ3dyaXRlRmlsZVN5bmMnLFxuICAgIC8vICdjbG9zZVN5bmMnLCAvLyBmdW5jdGlvbnMgb24gZmlsZSBkZXNjcmlwdG9yXG4gICAgLy8gJ2ZjaG1vZFN5bmMnLCAvLyBmdW5jdGlvbnMgb24gZmlsZSBkZXNjcmlwdG9yXG4gICAgLy8gJ2ZjaG93blN5bmMnLCAvLyBmdW5jdGlvbnMgb24gZmlsZSBkZXNjcmlwdG9yXG4gICAgLy8gJ2ZkYXRhc3luY1N5bmMnLCAvLyBmdW5jdGlvbnMgb24gZmlsZSBkZXNjcmlwdG9yXG4gICAgLy8gJ2ZzdGF0U3luYycsIC8vIGZ1bmN0aW9ucyBvbiBmaWxlIGRlc2NyaXB0b3JcbiAgICAvLyAnZnN5bmNTeW5jJywgLy8gZnVuY3Rpb25zIG9uIGZpbGUgZGVzY3JpcHRvclxuICAgIC8vICdmdHJ1bmNhdGVTeW5jJywgLy8gZnVuY3Rpb25zIG9uIGZpbGUgZGVzY3JpcHRvclxuICAgIC8vICdmdXRpbWVzU3luYycsIC8vIGZ1bmN0aW9ucyBvbiBmaWxlIGRlc2NyaXB0b3JcbiAgICAvLyAnbGNobW9kU3luYycsIC8vIG9ubHkgaW1wbGVtZW50ZWQgb24gbWFjT1NcbiAgICAvLyAncmVhZFN5bmMnLCAvLyBmdW5jdGlvbnMgb24gZmlsZSBkZXNjcmlwdG9yXG4gICAgLy8gJ3JlYWR2U3luYycsIC8vIGZ1bmN0aW9ucyBvbiBmaWxlIGRlc2NyaXB0b3JcbiAgICAvLyAnd3JpdGVTeW5jJywgLy8gZnVuY3Rpb25zIG9uIGZpbGUgZGVzY3JpcHRvclxuICAgIC8vICd3cml0ZXZTeW5jJywgLy8gZnVuY3Rpb25zIG9uIGZpbGUgZGVzY3JpcHRvclxuXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/constants.js\n")},"(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./instrumentation */ "(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/instrumentation.js"), exports);\n__exportStar(__webpack_require__(/*! ./types */ "(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/types.js"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWZzL2J1aWxkL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsb0NBQW9DLGdCQUFnQjtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLDhHQUFtQjtBQUN4QyxhQUFhLG1CQUFPLENBQUMsMEZBQVM7QUFDOUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcMVxcRG93bmxvYWRzXFx0YWJvckFjYWRlbXlVcGRhdGVkXFx0YWJvci1hY2FkZW15XFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxpbnN0cnVtZW50YXRpb24tZnNcXGJ1aWxkXFxzcmNcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2luc3RydW1lbnRhdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/index.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/instrumentation.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FsInstrumentation = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(ssr)/./node_modules/@opentelemetry/api/build/esm/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"(ssr)/./node_modules/@opentelemetry/core/build/esm/index.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(ssr)/./node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/version.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/constants.js\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/utils.js\");\n/**\n * This is important for 2-level functions like `realpath.native` to retain the 2nd-level\n * when patching the 1st-level.\n */\nfunction patchedFunctionWithOriginalProperties(patchedFunction, original) {\n    return Object.assign(patchedFunction, original);\n}\nclass FsInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, config);\n    }\n    init() {\n        return [\n            new instrumentation_1.InstrumentationNodeModuleDefinition('fs', ['*'], (fs) => {\n                for (const fName of constants_1.SYNC_FUNCTIONS) {\n                    const { objectToPatch, functionNameToPatch } = (0, utils_1.indexFs)(fs, fName);\n                    if ((0, instrumentation_1.isWrapped)(objectToPatch[functionNameToPatch])) {\n                        this._unwrap(objectToPatch, functionNameToPatch);\n                    }\n                    this._wrap(objectToPatch, functionNameToPatch, this._patchSyncFunction.bind(this, fName));\n                }\n                for (const fName of constants_1.CALLBACK_FUNCTIONS) {\n                    const { objectToPatch, functionNameToPatch } = (0, utils_1.indexFs)(fs, fName);\n                    if ((0, instrumentation_1.isWrapped)(objectToPatch[functionNameToPatch])) {\n                        this._unwrap(objectToPatch, functionNameToPatch);\n                    }\n                    if (fName === 'exists') {\n                        // handling separately because of the inconsistent cb style:\n                        // `exists` doesn't have error as the first argument, but the result\n                        this._wrap(objectToPatch, functionNameToPatch, this._patchExistsCallbackFunction.bind(this, fName));\n                        continue;\n                    }\n                    this._wrap(objectToPatch, functionNameToPatch, this._patchCallbackFunction.bind(this, fName));\n                }\n                for (const fName of constants_1.PROMISE_FUNCTIONS) {\n                    if ((0, instrumentation_1.isWrapped)(fs.promises[fName])) {\n                        this._unwrap(fs.promises, fName);\n                    }\n                    this._wrap(fs.promises, fName, this._patchPromiseFunction.bind(this, fName));\n                }\n                return fs;\n            }, (fs) => {\n                if (fs === undefined)\n                    return;\n                for (const fName of constants_1.SYNC_FUNCTIONS) {\n                    const { objectToPatch, functionNameToPatch } = (0, utils_1.indexFs)(fs, fName);\n                    if ((0, instrumentation_1.isWrapped)(objectToPatch[functionNameToPatch])) {\n                        this._unwrap(objectToPatch, functionNameToPatch);\n                    }\n                }\n                for (const fName of constants_1.CALLBACK_FUNCTIONS) {\n                    const { objectToPatch, functionNameToPatch } = (0, utils_1.indexFs)(fs, fName);\n                    if ((0, instrumentation_1.isWrapped)(objectToPatch[functionNameToPatch])) {\n                        this._unwrap(objectToPatch, functionNameToPatch);\n                    }\n                }\n                for (const fName of constants_1.PROMISE_FUNCTIONS) {\n                    if ((0, instrumentation_1.isWrapped)(fs.promises[fName])) {\n                        this._unwrap(fs.promises, fName);\n                    }\n                }\n            }),\n            new instrumentation_1.InstrumentationNodeModuleDefinition('fs/promises', ['*'], (fsPromises) => {\n                for (const fName of constants_1.PROMISE_FUNCTIONS) {\n                    if ((0, instrumentation_1.isWrapped)(fsPromises[fName])) {\n                        this._unwrap(fsPromises, fName);\n                    }\n                    this._wrap(fsPromises, fName, this._patchPromiseFunction.bind(this, fName));\n                }\n                return fsPromises;\n            }, (fsPromises) => {\n                if (fsPromises === undefined)\n                    return;\n                for (const fName of constants_1.PROMISE_FUNCTIONS) {\n                    if ((0, instrumentation_1.isWrapped)(fsPromises[fName])) {\n                        this._unwrap(fsPromises, fName);\n                    }\n                }\n            }),\n        ];\n    }\n    _patchSyncFunction(functionName, original) {\n        const instrumentation = this;\n        const patchedFunction = function (...args) {\n            const activeContext = api.context.active();\n            if (!instrumentation._shouldTrace(activeContext)) {\n                return original.apply(this, args);\n            }\n            if (instrumentation._runCreateHook(functionName, {\n                args: args,\n            }) === false) {\n                return api.context.with((0, core_1.suppressTracing)(activeContext), original, this, ...args);\n            }\n            const span = instrumentation.tracer.startSpan(`fs ${functionName}`);\n            try {\n                // Suppress tracing for internal fs calls\n                const res = api.context.with((0, core_1.suppressTracing)(api.trace.setSpan(activeContext, span)), original, this, ...args);\n                instrumentation._runEndHook(functionName, { args: args, span });\n                return res;\n            }\n            catch (error) {\n                span.recordException(error);\n                span.setStatus({\n                    message: error.message,\n                    code: api.SpanStatusCode.ERROR,\n                });\n                instrumentation._runEndHook(functionName, { args: args, span, error });\n                throw error;\n            }\n            finally {\n                span.end();\n            }\n        };\n        return patchedFunctionWithOriginalProperties(patchedFunction, original);\n    }\n    _patchCallbackFunction(functionName, original) {\n        const instrumentation = this;\n        const patchedFunction = function (...args) {\n            const activeContext = api.context.active();\n            if (!instrumentation._shouldTrace(activeContext)) {\n                return original.apply(this, args);\n            }\n            if (instrumentation._runCreateHook(functionName, {\n                args: args,\n            }) === false) {\n                return api.context.with((0, core_1.suppressTracing)(activeContext), original, this, ...args);\n            }\n            const lastIdx = args.length - 1;\n            const cb = args[lastIdx];\n            if (typeof cb === 'function') {\n                const span = instrumentation.tracer.startSpan(`fs ${functionName}`);\n                // Return to the context active during the call in the callback\n                args[lastIdx] = api.context.bind(activeContext, function (error) {\n                    if (error) {\n                        span.recordException(error);\n                        span.setStatus({\n                            message: error.message,\n                            code: api.SpanStatusCode.ERROR,\n                        });\n                    }\n                    instrumentation._runEndHook(functionName, {\n                        args: args,\n                        span,\n                        error,\n                    });\n                    span.end();\n                    return cb.apply(this, arguments);\n                });\n                try {\n                    // Suppress tracing for internal fs calls\n                    return api.context.with((0, core_1.suppressTracing)(api.trace.setSpan(activeContext, span)), original, this, ...args);\n                }\n                catch (error) {\n                    span.recordException(error);\n                    span.setStatus({\n                        message: error.message,\n                        code: api.SpanStatusCode.ERROR,\n                    });\n                    instrumentation._runEndHook(functionName, {\n                        args: args,\n                        span,\n                        error,\n                    });\n                    span.end();\n                    throw error;\n                }\n            }\n            else {\n                // TODO: what to do if we are pretty sure it's going to throw\n                return original.apply(this, args);\n            }\n        };\n        return patchedFunctionWithOriginalProperties(patchedFunction, original);\n    }\n    _patchExistsCallbackFunction(functionName, original) {\n        const instrumentation = this;\n        const patchedFunction = function (...args) {\n            const activeContext = api.context.active();\n            if (!instrumentation._shouldTrace(activeContext)) {\n                return original.apply(this, args);\n            }\n            if (instrumentation._runCreateHook(functionName, {\n                args: args,\n            }) === false) {\n                return api.context.with((0, core_1.suppressTracing)(activeContext), original, this, ...args);\n            }\n            const lastIdx = args.length - 1;\n            const cb = args[lastIdx];\n            if (typeof cb === 'function') {\n                const span = instrumentation.tracer.startSpan(`fs ${functionName}`);\n                // Return to the context active during the call in the callback\n                args[lastIdx] = api.context.bind(activeContext, function () {\n                    // `exists` never calls the callback with an error\n                    instrumentation._runEndHook(functionName, {\n                        args: args,\n                        span,\n                    });\n                    span.end();\n                    return cb.apply(this, arguments);\n                });\n                try {\n                    // Suppress tracing for internal fs calls\n                    return api.context.with((0, core_1.suppressTracing)(api.trace.setSpan(activeContext, span)), original, this, ...args);\n                }\n                catch (error) {\n                    span.recordException(error);\n                    span.setStatus({\n                        message: error.message,\n                        code: api.SpanStatusCode.ERROR,\n                    });\n                    instrumentation._runEndHook(functionName, {\n                        args: args,\n                        span,\n                        error,\n                    });\n                    span.end();\n                    throw error;\n                }\n            }\n            else {\n                return original.apply(this, args);\n            }\n        };\n        const functionWithOriginalProperties = patchedFunctionWithOriginalProperties(patchedFunction, original);\n        // `exists` has a custom promisify function because of the inconsistent signature\n        // replicating that on the patched function\n        const promisified = function (path) {\n            return new Promise(resolve => functionWithOriginalProperties(path, resolve));\n        };\n        Object.defineProperty(promisified, 'name', { value: functionName });\n        Object.defineProperty(functionWithOriginalProperties, util_1.promisify.custom, {\n            value: promisified,\n        });\n        return functionWithOriginalProperties;\n    }\n    _patchPromiseFunction(functionName, original) {\n        const instrumentation = this;\n        const patchedFunction = async function (...args) {\n            const activeContext = api.context.active();\n            if (!instrumentation._shouldTrace(activeContext)) {\n                return original.apply(this, args);\n            }\n            if (instrumentation._runCreateHook(functionName, {\n                args: args,\n            }) === false) {\n                return api.context.with((0, core_1.suppressTracing)(activeContext), original, this, ...args);\n            }\n            const span = instrumentation.tracer.startSpan(`fs ${functionName}`);\n            try {\n                // Suppress tracing for internal fs calls\n                const res = await api.context.with((0, core_1.suppressTracing)(api.trace.setSpan(activeContext, span)), original, this, ...args);\n                instrumentation._runEndHook(functionName, { args: args, span });\n                return res;\n            }\n            catch (error) {\n                span.recordException(error);\n                span.setStatus({\n                    message: error.message,\n                    code: api.SpanStatusCode.ERROR,\n                });\n                instrumentation._runEndHook(functionName, { args: args, span, error });\n                throw error;\n            }\n            finally {\n                span.end();\n            }\n        };\n        return patchedFunctionWithOriginalProperties(patchedFunction, original);\n    }\n    _runCreateHook(...args) {\n        const { createHook } = this.getConfig();\n        if (typeof createHook === 'function') {\n            try {\n                return createHook(...args);\n            }\n            catch (e) {\n                this._diag.error('caught createHook error', e);\n            }\n        }\n        return true;\n    }\n    _runEndHook(...args) {\n        const { endHook } = this.getConfig();\n        if (typeof endHook === 'function') {\n            try {\n                endHook(...args);\n            }\n            catch (e) {\n                this._diag.error('caught endHook error', e);\n            }\n        }\n    }\n    _shouldTrace(context) {\n        if ((0, core_1.isTracingSuppressed)(context)) {\n            // Performance optimization. Avoid creating additional contexts and spans\n            // if we already know that the tracing is being suppressed.\n            return false;\n        }\n        const { requireParentSpan } = this.getConfig();\n        if (requireParentSpan) {\n            const parentSpan = api.trace.getSpan(context);\n            if (parentSpan == null) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.FsInstrumentation = FsInstrumentation;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/instrumentation.js\n")},"(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/types.js":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWZzL2J1aWxkL3NyYy90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFwxXFxEb3dubG9hZHNcXHRhYm9yQWNhZGVteVVwZGF0ZWRcXHRhYm9yLWFjYWRlbXlcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvbi1mc1xcYnVpbGRcXHNyY1xcdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/types.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/utils.js":(__unused_webpack_module,exports)=>{eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.indexFs = exports.splitTwoLevels = void 0;\nfunction splitTwoLevels(functionName) {\n    const memberParts = functionName.split('.');\n    if (memberParts.length > 1) {\n        if (memberParts.length !== 2)\n            throw Error(`Invalid member function name ${functionName}`);\n        return memberParts;\n    }\n    else {\n        return [functionName];\n    }\n}\nexports.splitTwoLevels = splitTwoLevels;\nfunction indexFs(fs, member) {\n    if (!member)\n        throw new Error(JSON.stringify({ member }));\n    const splitResult = splitTwoLevels(member);\n    const [functionName1, functionName2] = splitResult;\n    if (functionName2) {\n        return {\n            objectToPatch: fs[functionName1],\n            functionNameToPatch: functionName2,\n        };\n    }\n    else {\n        return {\n            objectToPatch: fs,\n            functionNameToPatch: functionName1,\n        };\n    }\n}\nexports.indexFs = indexFs;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWZzL2J1aWxkL3NyYy91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLEdBQUcsc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELGFBQWE7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSx5Q0FBeUMsUUFBUTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcMVxcRG93bmxvYWRzXFx0YWJvckFjYWRlbXlVcGRhdGVkXFx0YWJvci1hY2FkZW15XFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxpbnN0cnVtZW50YXRpb24tZnNcXGJ1aWxkXFxzcmNcXHV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbmRleEZzID0gZXhwb3J0cy5zcGxpdFR3b0xldmVscyA9IHZvaWQgMDtcbmZ1bmN0aW9uIHNwbGl0VHdvTGV2ZWxzKGZ1bmN0aW9uTmFtZSkge1xuICAgIGNvbnN0IG1lbWJlclBhcnRzID0gZnVuY3Rpb25OYW1lLnNwbGl0KCcuJyk7XG4gICAgaWYgKG1lbWJlclBhcnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgaWYgKG1lbWJlclBhcnRzLmxlbmd0aCAhPT0gMilcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBJbnZhbGlkIG1lbWJlciBmdW5jdGlvbiBuYW1lICR7ZnVuY3Rpb25OYW1lfWApO1xuICAgICAgICByZXR1cm4gbWVtYmVyUGFydHM7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gW2Z1bmN0aW9uTmFtZV07XG4gICAgfVxufVxuZXhwb3J0cy5zcGxpdFR3b0xldmVscyA9IHNwbGl0VHdvTGV2ZWxzO1xuZnVuY3Rpb24gaW5kZXhGcyhmcywgbWVtYmVyKSB7XG4gICAgaWYgKCFtZW1iZXIpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihKU09OLnN0cmluZ2lmeSh7IG1lbWJlciB9KSk7XG4gICAgY29uc3Qgc3BsaXRSZXN1bHQgPSBzcGxpdFR3b0xldmVscyhtZW1iZXIpO1xuICAgIGNvbnN0IFtmdW5jdGlvbk5hbWUxLCBmdW5jdGlvbk5hbWUyXSA9IHNwbGl0UmVzdWx0O1xuICAgIGlmIChmdW5jdGlvbk5hbWUyKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBvYmplY3RUb1BhdGNoOiBmc1tmdW5jdGlvbk5hbWUxXSxcbiAgICAgICAgICAgIGZ1bmN0aW9uTmFtZVRvUGF0Y2g6IGZ1bmN0aW9uTmFtZTIsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgb2JqZWN0VG9QYXRjaDogZnMsXG4gICAgICAgICAgICBmdW5jdGlvbk5hbWVUb1BhdGNoOiBmdW5jdGlvbk5hbWUxLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydHMuaW5kZXhGcyA9IGluZGV4RnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/utils.js\n")},"(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/version.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = \'0.19.1\';\nexports.PACKAGE_NAME = \'@opentelemetry/instrumentation-fs\';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWZzL2J1aWxkL3NyYy92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLHVCQUF1QjtBQUM5QztBQUNBLHVCQUF1QjtBQUN2QixvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcMVxcRG93bmxvYWRzXFx0YWJvckFjYWRlbXlVcGRhdGVkXFx0YWJvci1hY2FkZW15XFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxpbnN0cnVtZW50YXRpb24tZnNcXGJ1aWxkXFxzcmNcXHZlcnNpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QQUNLQUdFX05BTUUgPSBleHBvcnRzLlBBQ0tBR0VfVkVSU0lPTiA9IHZvaWQgMDtcbi8vIHRoaXMgaXMgYXV0b2dlbmVyYXRlZCBmaWxlLCBzZWUgc2NyaXB0cy92ZXJzaW9uLXVwZGF0ZS5qc1xuZXhwb3J0cy5QQUNLQUdFX1ZFUlNJT04gPSAnMC4xOS4xJztcbmV4cG9ydHMuUEFDS0FHRV9OQU1FID0gJ0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1mcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-fs/build/src/version.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-generic-pool/build/src/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./instrumentation */ "(ssr)/./node_modules/@opentelemetry/instrumentation-generic-pool/build/src/instrumentation.js"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdlbmVyaWMtcG9vbC9idWlsZC9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLG9DQUFvQyxnQkFBZ0I7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyx3SEFBbUI7QUFDeEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcMVxcRG93bmxvYWRzXFx0YWJvckFjYWRlbXlVcGRhdGVkXFx0YWJvci1hY2FkZW15XFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxpbnN0cnVtZW50YXRpb24tZ2VuZXJpYy1wb29sXFxidWlsZFxcc3JjXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9pbnN0cnVtZW50YXRpb25cIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-generic-pool/build/src/index.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-generic-pool/build/src/instrumentation.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GenericPoolInstrumentation = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(ssr)/./node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(ssr)/./node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-generic-pool/build/src/version.js\");\nconst MODULE_NAME = 'generic-pool';\nclass GenericPoolInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, config);\n        // only used for v2 - v2.3)\n        this._isDisabled = false;\n    }\n    init() {\n        return [\n            new instrumentation_1.InstrumentationNodeModuleDefinition(MODULE_NAME, ['>=3.0.0 <4'], moduleExports => {\n                const Pool = moduleExports.Pool;\n                if ((0, instrumentation_1.isWrapped)(Pool.prototype.acquire)) {\n                    this._unwrap(Pool.prototype, 'acquire');\n                }\n                this._wrap(Pool.prototype, 'acquire', this._acquirePatcher.bind(this));\n                return moduleExports;\n            }, moduleExports => {\n                const Pool = moduleExports.Pool;\n                this._unwrap(Pool.prototype, 'acquire');\n                return moduleExports;\n            }),\n            new instrumentation_1.InstrumentationNodeModuleDefinition(MODULE_NAME, ['>=2.4.0 <3'], moduleExports => {\n                const Pool = moduleExports.Pool;\n                if ((0, instrumentation_1.isWrapped)(Pool.prototype.acquire)) {\n                    this._unwrap(Pool.prototype, 'acquire');\n                }\n                this._wrap(Pool.prototype, 'acquire', this._acquireWithCallbacksPatcher.bind(this));\n                return moduleExports;\n            }, moduleExports => {\n                const Pool = moduleExports.Pool;\n                this._unwrap(Pool.prototype, 'acquire');\n                return moduleExports;\n            }),\n            new instrumentation_1.InstrumentationNodeModuleDefinition(MODULE_NAME, ['>=2.0.0 <2.4'], moduleExports => {\n                this._isDisabled = false;\n                if ((0, instrumentation_1.isWrapped)(moduleExports.Pool)) {\n                    this._unwrap(moduleExports, 'Pool');\n                }\n                this._wrap(moduleExports, 'Pool', this._poolWrapper.bind(this));\n                return moduleExports;\n            }, moduleExports => {\n                // since the object is created on the fly every time, we need to use\n                // a boolean switch here to disable the instrumentation\n                this._isDisabled = true;\n                return moduleExports;\n            }),\n        ];\n    }\n    _acquirePatcher(original) {\n        const instrumentation = this;\n        return function wrapped_acquire(...args) {\n            const parent = api.context.active();\n            const span = instrumentation.tracer.startSpan('generic-pool.acquire', {}, parent);\n            return api.context.with(api.trace.setSpan(parent, span), () => {\n                return original.call(this, ...args).then(value => {\n                    span.end();\n                    return value;\n                }, err => {\n                    span.recordException(err);\n                    span.end();\n                    throw err;\n                });\n            });\n        };\n    }\n    _poolWrapper(original) {\n        const instrumentation = this;\n        return function wrapped_pool() {\n            const pool = original.apply(this, arguments);\n            instrumentation._wrap(pool, 'acquire', instrumentation._acquireWithCallbacksPatcher.bind(instrumentation));\n            return pool;\n        };\n    }\n    _acquireWithCallbacksPatcher(original) {\n        const instrumentation = this;\n        return function wrapped_acquire(cb, priority) {\n            // only used for v2 - v2.3\n            if (instrumentation._isDisabled) {\n                return original.call(this, cb, priority);\n            }\n            const parent = api.context.active();\n            const span = instrumentation.tracer.startSpan('generic-pool.acquire', {}, parent);\n            return api.context.with(api.trace.setSpan(parent, span), () => {\n                original.call(this, (err, client) => {\n                    span.end();\n                    // Not checking whether cb is a function because\n                    // the original code doesn't do that either.\n                    if (cb) {\n                        return cb(err, client);\n                    }\n                }, priority);\n            });\n        };\n    }\n}\nexports.GenericPoolInstrumentation = GenericPoolInstrumentation;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-generic-pool/build/src/instrumentation.js\n")},"(ssr)/./node_modules/@opentelemetry/instrumentation-generic-pool/build/src/version.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = \'0.43.1\';\nexports.PACKAGE_NAME = \'@opentelemetry/instrumentation-generic-pool\';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdlbmVyaWMtcG9vbC9idWlsZC9zcmMvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyx1QkFBdUI7QUFDOUM7QUFDQSx1QkFBdUI7QUFDdkIsb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXDFcXERvd25sb2Fkc1xcdGFib3JBY2FkZW15VXBkYXRlZFxcdGFib3ItYWNhZGVteVxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uLWdlbmVyaWMtcG9vbFxcYnVpbGRcXHNyY1xcdmVyc2lvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9IGV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gdm9pZCAwO1xuLy8gdGhpcyBpcyBhdXRvZ2VuZXJhdGVkIGZpbGUsIHNlZSBzY3JpcHRzL3ZlcnNpb24tdXBkYXRlLmpzXG5leHBvcnRzLlBBQ0tBR0VfVkVSU0lPTiA9ICcwLjQzLjEnO1xuZXhwb3J0cy5QQUNLQUdFX05BTUUgPSAnQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdlbmVyaWMtcG9vbCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-generic-pool/build/src/version.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/enum.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.SpanNames = exports.TokenKind = exports.AllowedOperationTypes = void 0;\nvar AllowedOperationTypes;\n(function (AllowedOperationTypes) {\n    AllowedOperationTypes["QUERY"] = "query";\n    AllowedOperationTypes["MUTATION"] = "mutation";\n    AllowedOperationTypes["SUBSCRIPTION"] = "subscription";\n})(AllowedOperationTypes = exports.AllowedOperationTypes || (exports.AllowedOperationTypes = {}));\nvar TokenKind;\n(function (TokenKind) {\n    TokenKind["SOF"] = "<SOF>";\n    TokenKind["EOF"] = "<EOF>";\n    TokenKind["BANG"] = "!";\n    TokenKind["DOLLAR"] = "$";\n    TokenKind["AMP"] = "&";\n    TokenKind["PAREN_L"] = "(";\n    TokenKind["PAREN_R"] = ")";\n    TokenKind["SPREAD"] = "...";\n    TokenKind["COLON"] = ":";\n    TokenKind["EQUALS"] = "=";\n    TokenKind["AT"] = "@";\n    TokenKind["BRACKET_L"] = "[";\n    TokenKind["BRACKET_R"] = "]";\n    TokenKind["BRACE_L"] = "{";\n    TokenKind["PIPE"] = "|";\n    TokenKind["BRACE_R"] = "}";\n    TokenKind["NAME"] = "Name";\n    TokenKind["INT"] = "Int";\n    TokenKind["FLOAT"] = "Float";\n    TokenKind["STRING"] = "String";\n    TokenKind["BLOCK_STRING"] = "BlockString";\n    TokenKind["COMMENT"] = "Comment";\n})(TokenKind = exports.TokenKind || (exports.TokenKind = {}));\nvar SpanNames;\n(function (SpanNames) {\n    SpanNames["EXECUTE"] = "graphql.execute";\n    SpanNames["PARSE"] = "graphql.parse";\n    SpanNames["RESOLVE"] = "graphql.resolve";\n    SpanNames["VALIDATE"] = "graphql.validate";\n    SpanNames["SCHEMA_VALIDATE"] = "graphql.validateSchema";\n    SpanNames["SCHEMA_PARSE"] = "graphql.parseSchema";\n})(SpanNames = exports.SpanNames || (exports.SpanNames = {}));\n//# sourceMappingURL=enum.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdyYXBocWwvYnVpbGQvc3JjL2VudW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsaUJBQWlCLEdBQUcsNkJBQTZCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDREQUE0RCw2QkFBNkIsS0FBSztBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvQ0FBb0MsaUJBQWlCLEtBQUs7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0NBQW9DLGlCQUFpQixLQUFLO0FBQzNEIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXDFcXERvd25sb2Fkc1xcdGFib3JBY2FkZW15VXBkYXRlZFxcdGFib3ItYWNhZGVteVxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uLWdyYXBocWxcXGJ1aWxkXFxzcmNcXGVudW0uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TcGFuTmFtZXMgPSBleHBvcnRzLlRva2VuS2luZCA9IGV4cG9ydHMuQWxsb3dlZE9wZXJhdGlvblR5cGVzID0gdm9pZCAwO1xudmFyIEFsbG93ZWRPcGVyYXRpb25UeXBlcztcbihmdW5jdGlvbiAoQWxsb3dlZE9wZXJhdGlvblR5cGVzKSB7XG4gICAgQWxsb3dlZE9wZXJhdGlvblR5cGVzW1wiUVVFUllcIl0gPSBcInF1ZXJ5XCI7XG4gICAgQWxsb3dlZE9wZXJhdGlvblR5cGVzW1wiTVVUQVRJT05cIl0gPSBcIm11dGF0aW9uXCI7XG4gICAgQWxsb3dlZE9wZXJhdGlvblR5cGVzW1wiU1VCU0NSSVBUSU9OXCJdID0gXCJzdWJzY3JpcHRpb25cIjtcbn0pKEFsbG93ZWRPcGVyYXRpb25UeXBlcyA9IGV4cG9ydHMuQWxsb3dlZE9wZXJhdGlvblR5cGVzIHx8IChleHBvcnRzLkFsbG93ZWRPcGVyYXRpb25UeXBlcyA9IHt9KSk7XG52YXIgVG9rZW5LaW5kO1xuKGZ1bmN0aW9uIChUb2tlbktpbmQpIHtcbiAgICBUb2tlbktpbmRbXCJTT0ZcIl0gPSBcIjxTT0Y+XCI7XG4gICAgVG9rZW5LaW5kW1wiRU9GXCJdID0gXCI8RU9GPlwiO1xuICAgIFRva2VuS2luZFtcIkJBTkdcIl0gPSBcIiFcIjtcbiAgICBUb2tlbktpbmRbXCJET0xMQVJcIl0gPSBcIiRcIjtcbiAgICBUb2tlbktpbmRbXCJBTVBcIl0gPSBcIiZcIjtcbiAgICBUb2tlbktpbmRbXCJQQVJFTl9MXCJdID0gXCIoXCI7XG4gICAgVG9rZW5LaW5kW1wiUEFSRU5fUlwiXSA9IFwiKVwiO1xuICAgIFRva2VuS2luZFtcIlNQUkVBRFwiXSA9IFwiLi4uXCI7XG4gICAgVG9rZW5LaW5kW1wiQ09MT05cIl0gPSBcIjpcIjtcbiAgICBUb2tlbktpbmRbXCJFUVVBTFNcIl0gPSBcIj1cIjtcbiAgICBUb2tlbktpbmRbXCJBVFwiXSA9IFwiQFwiO1xuICAgIFRva2VuS2luZFtcIkJSQUNLRVRfTFwiXSA9IFwiW1wiO1xuICAgIFRva2VuS2luZFtcIkJSQUNLRVRfUlwiXSA9IFwiXVwiO1xuICAgIFRva2VuS2luZFtcIkJSQUNFX0xcIl0gPSBcIntcIjtcbiAgICBUb2tlbktpbmRbXCJQSVBFXCJdID0gXCJ8XCI7XG4gICAgVG9rZW5LaW5kW1wiQlJBQ0VfUlwiXSA9IFwifVwiO1xuICAgIFRva2VuS2luZFtcIk5BTUVcIl0gPSBcIk5hbWVcIjtcbiAgICBUb2tlbktpbmRbXCJJTlRcIl0gPSBcIkludFwiO1xuICAgIFRva2VuS2luZFtcIkZMT0FUXCJdID0gXCJGbG9hdFwiO1xuICAgIFRva2VuS2luZFtcIlNUUklOR1wiXSA9IFwiU3RyaW5nXCI7XG4gICAgVG9rZW5LaW5kW1wiQkxPQ0tfU1RSSU5HXCJdID0gXCJCbG9ja1N0cmluZ1wiO1xuICAgIFRva2VuS2luZFtcIkNPTU1FTlRcIl0gPSBcIkNvbW1lbnRcIjtcbn0pKFRva2VuS2luZCA9IGV4cG9ydHMuVG9rZW5LaW5kIHx8IChleHBvcnRzLlRva2VuS2luZCA9IHt9KSk7XG52YXIgU3Bhbk5hbWVzO1xuKGZ1bmN0aW9uIChTcGFuTmFtZXMpIHtcbiAgICBTcGFuTmFtZXNbXCJFWEVDVVRFXCJdID0gXCJncmFwaHFsLmV4ZWN1dGVcIjtcbiAgICBTcGFuTmFtZXNbXCJQQVJTRVwiXSA9IFwiZ3JhcGhxbC5wYXJzZVwiO1xuICAgIFNwYW5OYW1lc1tcIlJFU09MVkVcIl0gPSBcImdyYXBocWwucmVzb2x2ZVwiO1xuICAgIFNwYW5OYW1lc1tcIlZBTElEQVRFXCJdID0gXCJncmFwaHFsLnZhbGlkYXRlXCI7XG4gICAgU3Bhbk5hbWVzW1wiU0NIRU1BX1ZBTElEQVRFXCJdID0gXCJncmFwaHFsLnZhbGlkYXRlU2NoZW1hXCI7XG4gICAgU3Bhbk5hbWVzW1wiU0NIRU1BX1BBUlNFXCJdID0gXCJncmFwaHFsLnBhcnNlU2NoZW1hXCI7XG59KShTcGFuTmFtZXMgPSBleHBvcnRzLlNwYW5OYW1lcyB8fCAoZXhwb3J0cy5TcGFuTmFtZXMgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW51bS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/enum.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/enums/AttributeNames.js":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.AttributeNames = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar AttributeNames;\n(function (AttributeNames) {\n    AttributeNames["SOURCE"] = "graphql.source";\n    AttributeNames["FIELD_NAME"] = "graphql.field.name";\n    AttributeNames["FIELD_PATH"] = "graphql.field.path";\n    AttributeNames["FIELD_TYPE"] = "graphql.field.type";\n    AttributeNames["OPERATION_TYPE"] = "graphql.operation.type";\n    AttributeNames["OPERATION_NAME"] = "graphql.operation.name";\n    AttributeNames["VARIABLES"] = "graphql.variables.";\n    AttributeNames["ERROR_VALIDATION_NAME"] = "graphql.validation.error";\n})(AttributeNames = exports.AttributeNames || (exports.AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdyYXBocWwvYnVpbGQvc3JjL2VudW1zL0F0dHJpYnV0ZU5hbWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDLHNCQUFzQixLQUFLO0FBQzFFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXDFcXERvd25sb2Fkc1xcdGFib3JBY2FkZW15VXBkYXRlZFxcdGFib3ItYWNhZGVteVxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uLWdyYXBocWxcXGJ1aWxkXFxzcmNcXGVudW1zXFxBdHRyaWJ1dGVOYW1lcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXR0cmlidXRlTmFtZXMgPSB2b2lkIDA7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIEF0dHJpYnV0ZU5hbWVzO1xuKGZ1bmN0aW9uIChBdHRyaWJ1dGVOYW1lcykge1xuICAgIEF0dHJpYnV0ZU5hbWVzW1wiU09VUkNFXCJdID0gXCJncmFwaHFsLnNvdXJjZVwiO1xuICAgIEF0dHJpYnV0ZU5hbWVzW1wiRklFTERfTkFNRVwiXSA9IFwiZ3JhcGhxbC5maWVsZC5uYW1lXCI7XG4gICAgQXR0cmlidXRlTmFtZXNbXCJGSUVMRF9QQVRIXCJdID0gXCJncmFwaHFsLmZpZWxkLnBhdGhcIjtcbiAgICBBdHRyaWJ1dGVOYW1lc1tcIkZJRUxEX1RZUEVcIl0gPSBcImdyYXBocWwuZmllbGQudHlwZVwiO1xuICAgIEF0dHJpYnV0ZU5hbWVzW1wiT1BFUkFUSU9OX1RZUEVcIl0gPSBcImdyYXBocWwub3BlcmF0aW9uLnR5cGVcIjtcbiAgICBBdHRyaWJ1dGVOYW1lc1tcIk9QRVJBVElPTl9OQU1FXCJdID0gXCJncmFwaHFsLm9wZXJhdGlvbi5uYW1lXCI7XG4gICAgQXR0cmlidXRlTmFtZXNbXCJWQVJJQUJMRVNcIl0gPSBcImdyYXBocWwudmFyaWFibGVzLlwiO1xuICAgIEF0dHJpYnV0ZU5hbWVzW1wiRVJST1JfVkFMSURBVElPTl9OQU1FXCJdID0gXCJncmFwaHFsLnZhbGlkYXRpb24uZXJyb3JcIjtcbn0pKEF0dHJpYnV0ZU5hbWVzID0gZXhwb3J0cy5BdHRyaWJ1dGVOYW1lcyB8fCAoZXhwb3J0cy5BdHRyaWJ1dGVOYW1lcyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdHRyaWJ1dGVOYW1lcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/enums/AttributeNames.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/index.js":function(__unused_webpack_module,exports,__webpack_require__){eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./instrumentation */ "(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/instrumentation.js"), exports);\n__exportStar(__webpack_require__(/*! ./types */ "(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/types.js"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdyYXBocWwvYnVpbGQvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsbUhBQW1CO0FBQ3hDLGFBQWEsbUJBQU8sQ0FBQywrRkFBUztBQUM5QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFwxXFxEb3dubG9hZHNcXHRhYm9yQWNhZGVteVVwZGF0ZWRcXHRhYm9yLWFjYWRlbXlcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvbi1ncmFwaHFsXFxidWlsZFxcc3JjXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9pbnN0cnVtZW50YXRpb25cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/index.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/instrumentation.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GraphQLInstrumentation = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(ssr)/./node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(ssr)/./node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst enum_1 = __webpack_require__(/*! ./enum */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/enum.js\");\nconst AttributeNames_1 = __webpack_require__(/*! ./enums/AttributeNames */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/enums/AttributeNames.js\");\nconst symbols_1 = __webpack_require__(/*! ./symbols */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/symbols.js\");\nconst internal_types_1 = __webpack_require__(/*! ./internal-types */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/internal-types.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/utils.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/version.js\");\nconst DEFAULT_CONFIG = {\n    mergeItems: false,\n    depth: -1,\n    allowValues: false,\n    ignoreResolveSpans: false,\n};\nconst supportedVersions = ['>=14.0.0 <17'];\nclass GraphQLInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, Object.assign(Object.assign({}, DEFAULT_CONFIG), config));\n    }\n    setConfig(config = {}) {\n        super.setConfig(Object.assign(Object.assign({}, DEFAULT_CONFIG), config));\n    }\n    init() {\n        const module = new instrumentation_1.InstrumentationNodeModuleDefinition('graphql', supportedVersions);\n        module.files.push(this._addPatchingExecute());\n        module.files.push(this._addPatchingParser());\n        module.files.push(this._addPatchingValidate());\n        return module;\n    }\n    _addPatchingExecute() {\n        return new instrumentation_1.InstrumentationNodeModuleFile('graphql/execution/execute.js', supportedVersions, \n        // cannot make it work with appropriate type as execute function has 2\n        //types and/cannot import function but only types\n        (moduleExports) => {\n            if ((0, instrumentation_1.isWrapped)(moduleExports.execute)) {\n                this._unwrap(moduleExports, 'execute');\n            }\n            this._wrap(moduleExports, 'execute', this._patchExecute(moduleExports.defaultFieldResolver));\n            return moduleExports;\n        }, moduleExports => {\n            if (moduleExports) {\n                this._unwrap(moduleExports, 'execute');\n            }\n        });\n    }\n    _addPatchingParser() {\n        return new instrumentation_1.InstrumentationNodeModuleFile('graphql/language/parser.js', supportedVersions, (moduleExports) => {\n            if ((0, instrumentation_1.isWrapped)(moduleExports.parse)) {\n                this._unwrap(moduleExports, 'parse');\n            }\n            this._wrap(moduleExports, 'parse', this._patchParse());\n            return moduleExports;\n        }, (moduleExports) => {\n            if (moduleExports) {\n                this._unwrap(moduleExports, 'parse');\n            }\n        });\n    }\n    _addPatchingValidate() {\n        return new instrumentation_1.InstrumentationNodeModuleFile('graphql/validation/validate.js', supportedVersions, moduleExports => {\n            if ((0, instrumentation_1.isWrapped)(moduleExports.validate)) {\n                this._unwrap(moduleExports, 'validate');\n            }\n            this._wrap(moduleExports, 'validate', this._patchValidate());\n            return moduleExports;\n        }, moduleExports => {\n            if (moduleExports) {\n                this._unwrap(moduleExports, 'validate');\n            }\n        });\n    }\n    _patchExecute(defaultFieldResolved) {\n        const instrumentation = this;\n        return function execute(original) {\n            return function patchExecute() {\n                let processedArgs;\n                // case when apollo server is used for example\n                if (arguments.length >= 2) {\n                    const args = arguments;\n                    processedArgs = instrumentation._wrapExecuteArgs(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], defaultFieldResolved);\n                }\n                else {\n                    const args = arguments[0];\n                    processedArgs = instrumentation._wrapExecuteArgs(args.schema, args.document, args.rootValue, args.contextValue, args.variableValues, args.operationName, args.fieldResolver, args.typeResolver, defaultFieldResolved);\n                }\n                const operation = (0, utils_1.getOperation)(processedArgs.document, processedArgs.operationName);\n                const span = instrumentation._createExecuteSpan(operation, processedArgs);\n                processedArgs.contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL] = {\n                    source: processedArgs.document\n                        ? processedArgs.document ||\n                            processedArgs.document[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL]\n                        : undefined,\n                    span,\n                    fields: {},\n                };\n                return api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {\n                    return (0, instrumentation_1.safeExecuteInTheMiddle)(() => {\n                        return original.apply(this, [\n                            processedArgs,\n                        ]);\n                    }, (err, result) => {\n                        instrumentation._handleExecutionResult(span, err, result);\n                    });\n                });\n            };\n        };\n    }\n    _handleExecutionResult(span, err, result) {\n        const config = this.getConfig();\n        if (result === undefined || err) {\n            (0, utils_1.endSpan)(span, err);\n            return;\n        }\n        if ((0, utils_1.isPromise)(result)) {\n            result.then(resultData => {\n                if (typeof config.responseHook !== 'function') {\n                    (0, utils_1.endSpan)(span);\n                    return;\n                }\n                this._executeResponseHook(span, resultData);\n            }, error => {\n                (0, utils_1.endSpan)(span, error);\n            });\n        }\n        else {\n            if (typeof config.responseHook !== 'function') {\n                (0, utils_1.endSpan)(span);\n                return;\n            }\n            this._executeResponseHook(span, result);\n        }\n    }\n    _executeResponseHook(span, result) {\n        const { responseHook } = this.getConfig();\n        if (!responseHook) {\n            return;\n        }\n        (0, instrumentation_1.safeExecuteInTheMiddle)(() => {\n            responseHook(span, result);\n        }, err => {\n            if (err) {\n                this._diag.error('Error running response hook', err);\n            }\n            (0, utils_1.endSpan)(span, undefined);\n        }, true);\n    }\n    _patchParse() {\n        const instrumentation = this;\n        return function parse(original) {\n            return function patchParse(source, options) {\n                return instrumentation._parse(this, original, source, options);\n            };\n        };\n    }\n    _patchValidate() {\n        const instrumentation = this;\n        return function validate(original) {\n            return function patchValidate(schema, documentAST, rules, options, typeInfo) {\n                return instrumentation._validate(this, original, schema, documentAST, rules, typeInfo, options);\n            };\n        };\n    }\n    _parse(obj, original, source, options) {\n        const config = this.getConfig();\n        const span = this.tracer.startSpan(enum_1.SpanNames.PARSE);\n        return api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {\n            return (0, instrumentation_1.safeExecuteInTheMiddle)(() => {\n                return original.call(obj, source, options);\n            }, (err, result) => {\n                if (result) {\n                    const operation = (0, utils_1.getOperation)(result);\n                    if (!operation) {\n                        span.updateName(enum_1.SpanNames.SCHEMA_PARSE);\n                    }\n                    else if (result.loc) {\n                        (0, utils_1.addSpanSource)(span, result.loc, config.allowValues);\n                    }\n                }\n                (0, utils_1.endSpan)(span, err);\n            });\n        });\n    }\n    _validate(obj, original, schema, documentAST, rules, typeInfo, options) {\n        const span = this.tracer.startSpan(enum_1.SpanNames.VALIDATE, {});\n        return api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {\n            return (0, instrumentation_1.safeExecuteInTheMiddle)(() => {\n                return original.call(obj, schema, documentAST, rules, options, typeInfo);\n            }, (err, errors) => {\n                if (!documentAST.loc) {\n                    span.updateName(enum_1.SpanNames.SCHEMA_VALIDATE);\n                }\n                if (errors && errors.length) {\n                    span.recordException({\n                        name: AttributeNames_1.AttributeNames.ERROR_VALIDATION_NAME,\n                        message: JSON.stringify(errors),\n                    });\n                }\n                (0, utils_1.endSpan)(span, err);\n            });\n        });\n    }\n    _createExecuteSpan(operation, processedArgs) {\n        var _a;\n        const config = this.getConfig();\n        const span = this.tracer.startSpan(enum_1.SpanNames.EXECUTE, {});\n        if (operation) {\n            const { operation: operationType, name: nameNode } = operation;\n            span.setAttribute(AttributeNames_1.AttributeNames.OPERATION_TYPE, operationType);\n            const operationName = nameNode === null || nameNode === void 0 ? void 0 : nameNode.value;\n            // https://opentelemetry.io/docs/reference/specification/trace/semantic_conventions/instrumentation/graphql/\n            // > The span name MUST be of the format <graphql.operation.type> <graphql.operation.name> provided that graphql.operation.type and graphql.operation.name are available.\n            // > If graphql.operation.name is not available, the span SHOULD be named <graphql.operation.type>.\n            if (operationName) {\n                span.setAttribute(AttributeNames_1.AttributeNames.OPERATION_NAME, operationName);\n                span.updateName(`${operationType} ${operationName}`);\n            }\n            else {\n                span.updateName(operationType);\n            }\n        }\n        else {\n            let operationName = ' ';\n            if (processedArgs.operationName) {\n                operationName = ` \"${processedArgs.operationName}\" `;\n            }\n            operationName = internal_types_1.OPERATION_NOT_SUPPORTED.replace('$operationName$', operationName);\n            span.setAttribute(AttributeNames_1.AttributeNames.OPERATION_NAME, operationName);\n        }\n        if ((_a = processedArgs.document) === null || _a === void 0 ? void 0 : _a.loc) {\n            (0, utils_1.addSpanSource)(span, processedArgs.document.loc, config.allowValues);\n        }\n        if (processedArgs.variableValues && config.allowValues) {\n            (0, utils_1.addInputVariableAttributes)(span, processedArgs.variableValues);\n        }\n        return span;\n    }\n    _wrapExecuteArgs(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver, defaultFieldResolved) {\n        if (!contextValue) {\n            contextValue = {};\n        }\n        if (contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL] ||\n            this.getConfig().ignoreResolveSpans) {\n            return {\n                schema,\n                document,\n                rootValue,\n                contextValue,\n                variableValues,\n                operationName,\n                fieldResolver,\n                typeResolver,\n            };\n        }\n        const isUsingDefaultResolver = fieldResolver == null;\n        // follows graphql implementation here:\n        // https://github.com/graphql/graphql-js/blob/0b7daed9811731362c71900e12e5ea0d1ecc7f1f/src/execution/execute.ts#L494\n        const fieldResolverForExecute = fieldResolver !== null && fieldResolver !== void 0 ? fieldResolver : defaultFieldResolved;\n        fieldResolver = (0, utils_1.wrapFieldResolver)(this.tracer, () => this.getConfig(), fieldResolverForExecute, isUsingDefaultResolver);\n        if (schema) {\n            (0, utils_1.wrapFields)(schema.getQueryType(), this.tracer, () => this.getConfig());\n            (0, utils_1.wrapFields)(schema.getMutationType(), this.tracer, () => this.getConfig());\n        }\n        return {\n            schema,\n            document,\n            rootValue,\n            contextValue,\n            variableValues,\n            operationName,\n            fieldResolver,\n            typeResolver,\n        };\n    }\n}\nexports.GraphQLInstrumentation = GraphQLInstrumentation;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/instrumentation.js\n")},"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/internal-types.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.OPERATION_NOT_SUPPORTED = void 0;\nconst symbols_1 = __webpack_require__(/*! ./symbols */ "(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/symbols.js");\nexports.OPERATION_NOT_SUPPORTED = \'Operation$operationName$not\' + \' supported\';\n//# sourceMappingURL=internal-types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdyYXBocWwvYnVpbGQvc3JjL2ludGVybmFsLXR5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQjtBQUMvQixrQkFBa0IsbUJBQU8sQ0FBQyxtR0FBVztBQUNyQywrQkFBK0I7QUFDL0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcMVxcRG93bmxvYWRzXFx0YWJvckFjYWRlbXlVcGRhdGVkXFx0YWJvci1hY2FkZW15XFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxpbnN0cnVtZW50YXRpb24tZ3JhcGhxbFxcYnVpbGRcXHNyY1xcaW50ZXJuYWwtdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PUEVSQVRJT05fTk9UX1NVUFBPUlRFRCA9IHZvaWQgMDtcbmNvbnN0IHN5bWJvbHNfMSA9IHJlcXVpcmUoXCIuL3N5bWJvbHNcIik7XG5leHBvcnRzLk9QRVJBVElPTl9OT1RfU1VQUE9SVEVEID0gJ09wZXJhdGlvbiRvcGVyYXRpb25OYW1lJG5vdCcgKyAnIHN1cHBvcnRlZCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcm5hbC10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/internal-types.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/symbols.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.OTEL_GRAPHQL_DATA_SYMBOL = exports.OTEL_PATCHED_SYMBOL = void 0;\nexports.OTEL_PATCHED_SYMBOL = Symbol.for(\'opentelemetry.patched\');\nexports.OTEL_GRAPHQL_DATA_SYMBOL = Symbol.for(\'opentelemetry.graphql_data\');\n//# sourceMappingURL=symbols.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdyYXBocWwvYnVpbGQvc3JjL3N5bWJvbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0NBQWdDLEdBQUcsMkJBQTJCO0FBQzlELDJCQUEyQjtBQUMzQixnQ0FBZ0M7QUFDaEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcMVxcRG93bmxvYWRzXFx0YWJvckFjYWRlbXlVcGRhdGVkXFx0YWJvci1hY2FkZW15XFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxpbnN0cnVtZW50YXRpb24tZ3JhcGhxbFxcYnVpbGRcXHNyY1xcc3ltYm9scy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk9URUxfR1JBUEhRTF9EQVRBX1NZTUJPTCA9IGV4cG9ydHMuT1RFTF9QQVRDSEVEX1NZTUJPTCA9IHZvaWQgMDtcbmV4cG9ydHMuT1RFTF9QQVRDSEVEX1NZTUJPTCA9IFN5bWJvbC5mb3IoJ29wZW50ZWxlbWV0cnkucGF0Y2hlZCcpO1xuZXhwb3J0cy5PVEVMX0dSQVBIUUxfREFUQV9TWU1CT0wgPSBTeW1ib2wuZm9yKCdvcGVudGVsZW1ldHJ5LmdyYXBocWxfZGF0YScpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3ltYm9scy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/symbols.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/types.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdyYXBocWwvYnVpbGQvc3JjL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXDFcXERvd25sb2Fkc1xcdGFib3JBY2FkZW15VXBkYXRlZFxcdGFib3ItYWNhZGVteVxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uLWdyYXBocWxcXGJ1aWxkXFxzcmNcXHR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/types.js\n')},"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/utils.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.wrapFieldResolver = exports.wrapFields = exports.getSourceFromLocation = exports.getOperation = exports.endSpan = exports.addSpanSource = exports.addInputVariableAttributes = exports.isPromise = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(ssr)/./node_modules/@opentelemetry/api/build/esm/index.js\");\nconst enum_1 = __webpack_require__(/*! ./enum */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/enum.js\");\nconst AttributeNames_1 = __webpack_require__(/*! ./enums/AttributeNames */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/enums/AttributeNames.js\");\nconst symbols_1 = __webpack_require__(/*! ./symbols */ \"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/symbols.js\");\nconst OPERATION_VALUES = Object.values(enum_1.AllowedOperationTypes);\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/isPromise.ts\nconst isPromise = (value) => {\n    return typeof (value === null || value === void 0 ? void 0 : value.then) === 'function';\n};\nexports.isPromise = isPromise;\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/isObjectLike.ts\nconst isObjectLike = (value) => {\n    return typeof value == 'object' && value !== null;\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction addInputVariableAttribute(span, key, variable) {\n    if (Array.isArray(variable)) {\n        variable.forEach((value, idx) => {\n            addInputVariableAttribute(span, `${key}.${idx}`, value);\n        });\n    }\n    else if (variable instanceof Object) {\n        Object.entries(variable).forEach(([nestedKey, value]) => {\n            addInputVariableAttribute(span, `${key}.${nestedKey}`, value);\n        });\n    }\n    else {\n        span.setAttribute(`${AttributeNames_1.AttributeNames.VARIABLES}${String(key)}`, variable);\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction addInputVariableAttributes(span, variableValues) {\n    Object.entries(variableValues).forEach(([key, value]) => {\n        addInputVariableAttribute(span, key, value);\n    });\n}\nexports.addInputVariableAttributes = addInputVariableAttributes;\nfunction addSpanSource(span, loc, allowValues, start, end) {\n    const source = getSourceFromLocation(loc, allowValues, start, end);\n    span.setAttribute(AttributeNames_1.AttributeNames.SOURCE, source);\n}\nexports.addSpanSource = addSpanSource;\nfunction createFieldIfNotExists(tracer, getConfig, contextValue, info, path) {\n    let field = getField(contextValue, path);\n    let spanAdded = false;\n    if (!field) {\n        spanAdded = true;\n        const parent = getParentField(contextValue, path);\n        field = {\n            parent,\n            span: createResolverSpan(tracer, getConfig, contextValue, info, path, parent.span),\n            error: null,\n        };\n        addField(contextValue, path, field);\n    }\n    return { spanAdded, field };\n}\nfunction createResolverSpan(tracer, getConfig, contextValue, info, path, parentSpan) {\n    var _a, _b;\n    const attributes = {\n        [AttributeNames_1.AttributeNames.FIELD_NAME]: info.fieldName,\n        [AttributeNames_1.AttributeNames.FIELD_PATH]: path.join('.'),\n        [AttributeNames_1.AttributeNames.FIELD_TYPE]: info.returnType.toString(),\n    };\n    const span = tracer.startSpan(`${enum_1.SpanNames.RESOLVE} ${attributes[AttributeNames_1.AttributeNames.FIELD_PATH]}`, {\n        attributes,\n    }, parentSpan ? api.trace.setSpan(api.context.active(), parentSpan) : undefined);\n    const document = contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL].source;\n    const fieldNode = info.fieldNodes.find(fieldNode => fieldNode.kind === 'Field');\n    if (fieldNode) {\n        addSpanSource(span, document.loc, getConfig().allowValues, (_a = fieldNode.loc) === null || _a === void 0 ? void 0 : _a.start, (_b = fieldNode.loc) === null || _b === void 0 ? void 0 : _b.end);\n    }\n    return span;\n}\nfunction endSpan(span, error) {\n    if (error) {\n        span.recordException(error);\n    }\n    span.end();\n}\nexports.endSpan = endSpan;\nfunction getOperation(document, operationName) {\n    if (!document || !Array.isArray(document.definitions)) {\n        return undefined;\n    }\n    if (operationName) {\n        return document.definitions\n            .filter(definition => { var _a; return OPERATION_VALUES.indexOf((_a = definition) === null || _a === void 0 ? void 0 : _a.operation) !== -1; })\n            .find(definition => { var _a, _b; return operationName === ((_b = (_a = definition) === null || _a === void 0 ? void 0 : _a.name) === null || _b === void 0 ? void 0 : _b.value); });\n    }\n    else {\n        return document.definitions.find(definition => { var _a; return OPERATION_VALUES.indexOf((_a = definition) === null || _a === void 0 ? void 0 : _a.operation) !== -1; });\n    }\n}\nexports.getOperation = getOperation;\nfunction addField(contextValue, path, field) {\n    return (contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')] =\n        field);\n}\nfunction getField(contextValue, path) {\n    return contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')];\n}\nfunction getParentField(contextValue, path) {\n    for (let i = path.length - 1; i > 0; i--) {\n        const field = getField(contextValue, path.slice(0, i));\n        if (field) {\n            return field;\n        }\n    }\n    return {\n        span: contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL].span,\n    };\n}\nfunction pathToArray(mergeItems, path) {\n    const flattened = [];\n    let curr = path;\n    while (curr) {\n        let key = curr.key;\n        if (mergeItems && typeof key === 'number') {\n            key = '*';\n        }\n        flattened.push(String(key));\n        curr = curr.prev;\n    }\n    return flattened.reverse();\n}\nfunction repeatBreak(i) {\n    return repeatChar('\\n', i);\n}\nfunction repeatSpace(i) {\n    return repeatChar(' ', i);\n}\nfunction repeatChar(char, to) {\n    let text = '';\n    for (let i = 0; i < to; i++) {\n        text += char;\n    }\n    return text;\n}\nconst KindsToBeRemoved = [\n    enum_1.TokenKind.FLOAT,\n    enum_1.TokenKind.STRING,\n    enum_1.TokenKind.INT,\n    enum_1.TokenKind.BLOCK_STRING,\n];\nfunction getSourceFromLocation(loc, allowValues = false, inputStart, inputEnd) {\n    var _a, _b;\n    let source = '';\n    if (loc === null || loc === void 0 ? void 0 : loc.startToken) {\n        const start = typeof inputStart === 'number' ? inputStart : loc.start;\n        const end = typeof inputEnd === 'number' ? inputEnd : loc.end;\n        let next = loc.startToken.next;\n        let previousLine = 1;\n        while (next) {\n            if (next.start < start) {\n                next = next.next;\n                previousLine = next === null || next === void 0 ? void 0 : next.line;\n                continue;\n            }\n            if (next.end > end) {\n                next = next.next;\n                previousLine = next === null || next === void 0 ? void 0 : next.line;\n                continue;\n            }\n            let value = next.value || next.kind;\n            let space = '';\n            if (!allowValues && KindsToBeRemoved.indexOf(next.kind) >= 0) {\n                // value = repeatChar('*', value.length);\n                value = '*';\n            }\n            if (next.kind === enum_1.TokenKind.STRING) {\n                value = `\"${value}\"`;\n            }\n            if (next.kind === enum_1.TokenKind.EOF) {\n                value = '';\n            }\n            if (next.line > previousLine) {\n                source += repeatBreak(next.line - previousLine);\n                previousLine = next.line;\n                space = repeatSpace(next.column - 1);\n            }\n            else {\n                if (next.line === ((_a = next.prev) === null || _a === void 0 ? void 0 : _a.line)) {\n                    space = repeatSpace(next.start - (((_b = next.prev) === null || _b === void 0 ? void 0 : _b.end) || 0));\n                }\n            }\n            source += space + value;\n            if (next) {\n                next = next.next;\n            }\n        }\n    }\n    return source;\n}\nexports.getSourceFromLocation = getSourceFromLocation;\nfunction wrapFields(type, tracer, getConfig) {\n    if (!type ||\n        typeof type.getFields !== 'function' ||\n        type[symbols_1.OTEL_PATCHED_SYMBOL]) {\n        return;\n    }\n    const fields = type.getFields();\n    type[symbols_1.OTEL_PATCHED_SYMBOL] = true;\n    Object.keys(fields).forEach(key => {\n        const field = fields[key];\n        if (!field) {\n            return;\n        }\n        if (field.resolve) {\n            field.resolve = wrapFieldResolver(tracer, getConfig, field.resolve);\n        }\n        if (field.type) {\n            let unwrappedType = field.type;\n            while (unwrappedType.ofType) {\n                unwrappedType = unwrappedType.ofType;\n            }\n            wrapFields(unwrappedType, tracer, getConfig);\n        }\n    });\n}\nexports.wrapFields = wrapFields;\nconst handleResolveSpanError = (resolveSpan, err, shouldEndSpan) => {\n    if (!shouldEndSpan) {\n        return;\n    }\n    resolveSpan.recordException(err);\n    resolveSpan.setStatus({\n        code: api.SpanStatusCode.ERROR,\n        message: err.message,\n    });\n    resolveSpan.end();\n};\nconst handleResolveSpanSuccess = (resolveSpan, shouldEndSpan) => {\n    if (!shouldEndSpan) {\n        return;\n    }\n    resolveSpan.end();\n};\nfunction wrapFieldResolver(tracer, getConfig, fieldResolver, isDefaultResolver = false) {\n    if (wrappedFieldResolver[symbols_1.OTEL_PATCHED_SYMBOL] ||\n        typeof fieldResolver !== 'function') {\n        return fieldResolver;\n    }\n    function wrappedFieldResolver(source, args, contextValue, info) {\n        if (!fieldResolver) {\n            return undefined;\n        }\n        const config = getConfig();\n        // follows what graphql is doing to decide if this is a trivial resolver\n        // for which we don't need to create a resolve span\n        if (config.ignoreTrivialResolveSpans &&\n            isDefaultResolver &&\n            (isObjectLike(source) || typeof source === 'function')) {\n            const property = source[info.fieldName];\n            // a function execution is not trivial and should be recorder.\n            // property which is not a function is just a value and we don't want a \"resolve\" span for it\n            if (typeof property !== 'function') {\n                return fieldResolver.call(this, source, args, contextValue, info);\n            }\n        }\n        if (!contextValue[symbols_1.OTEL_GRAPHQL_DATA_SYMBOL]) {\n            return fieldResolver.call(this, source, args, contextValue, info);\n        }\n        const path = pathToArray(config.mergeItems, info && info.path);\n        const depth = path.filter((item) => typeof item === 'string').length;\n        let field;\n        let shouldEndSpan = false;\n        if (config.depth >= 0 && config.depth < depth) {\n            field = getParentField(contextValue, path);\n        }\n        else {\n            const newField = createFieldIfNotExists(tracer, getConfig, contextValue, info, path);\n            field = newField.field;\n            shouldEndSpan = newField.spanAdded;\n        }\n        return api.context.with(api.trace.setSpan(api.context.active(), field.span), () => {\n            try {\n                const res = fieldResolver.call(this, source, args, contextValue, info);\n                if ((0, exports.isPromise)(res)) {\n                    return res.then((r) => {\n                        handleResolveSpanSuccess(field.span, shouldEndSpan);\n                        return r;\n                    }, (err) => {\n                        handleResolveSpanError(field.span, err, shouldEndSpan);\n                        throw err;\n                    });\n                }\n                else {\n                    handleResolveSpanSuccess(field.span, shouldEndSpan);\n                    return res;\n                }\n            }\n            catch (err) {\n                handleResolveSpanError(field.span, err, shouldEndSpan);\n                throw err;\n            }\n        });\n    }\n    wrappedFieldResolver[symbols_1.OTEL_PATCHED_SYMBOL] = true;\n    return wrappedFieldResolver;\n}\nexports.wrapFieldResolver = wrapFieldResolver;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/utils.js\n")},"(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/version.js":(__unused_webpack_module,exports)=>{eval('\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = \'0.47.1\';\nexports.PACKAGE_NAME = \'@opentelemetry/instrumentation-graphql\';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdyYXBocWwvYnVpbGQvc3JjL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsdUJBQXVCO0FBQzlDO0FBQ0EsdUJBQXVCO0FBQ3ZCLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFwxXFxEb3dubG9hZHNcXHRhYm9yQWNhZGVteVVwZGF0ZWRcXHRhYm9yLWFjYWRlbXlcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvbi1ncmFwaHFsXFxidWlsZFxcc3JjXFx2ZXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUEFDS0FHRV9OQU1FID0gZXhwb3J0cy5QQUNLQUdFX1ZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gJzAuNDcuMSc7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9ICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZ3JhcGhxbCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@opentelemetry/instrumentation-graphql/build/src/version.js\n')}};